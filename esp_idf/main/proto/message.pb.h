// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/message.proto
// Protobuf C++ Version: 4.25.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_proto_2fmessage_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_proto_2fmessage_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fmessage_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fmessage_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fmessage_2eproto;
class DeviceInformationRequest;
struct DeviceInformationRequestDefaultTypeInternal;
extern DeviceInformationRequestDefaultTypeInternal _DeviceInformationRequest_default_instance_;
class DeviceInformationResponse;
struct DeviceInformationResponseDefaultTypeInternal;
extern DeviceInformationResponseDefaultTypeInternal _DeviceInformationResponse_default_instance_;
class Effect;
struct EffectDefaultTypeInternal;
extern EffectDefaultTypeInternal _Effect_default_instance_;
class GetSceneResponse;
struct GetSceneResponseDefaultTypeInternal;
extern GetSceneResponseDefaultTypeInternal _GetSceneResponse_default_instance_;
class LightingScheduleRequest;
struct LightingScheduleRequestDefaultTypeInternal;
extern LightingScheduleRequestDefaultTypeInternal _LightingScheduleRequest_default_instance_;
class ListTimePointRequest;
struct ListTimePointRequestDefaultTypeInternal;
extern ListTimePointRequestDefaultTypeInternal _ListTimePointRequest_default_instance_;
class ListTimePointRequest_Time;
struct ListTimePointRequest_TimeDefaultTypeInternal;
extern ListTimePointRequest_TimeDefaultTypeInternal _ListTimePointRequest_Time_default_instance_;
class RTCRequest;
struct RTCRequestDefaultTypeInternal;
extern RTCRequestDefaultTypeInternal _RTCRequest_default_instance_;
class SetColorModeRequest;
struct SetColorModeRequestDefaultTypeInternal;
extern SetColorModeRequestDefaultTypeInternal _SetColorModeRequest_default_instance_;
class SetSceneRequest;
struct SetSceneRequestDefaultTypeInternal;
extern SetSceneRequestDefaultTypeInternal _SetSceneRequest_default_instance_;
class SetStaticColorRequest;
struct SetStaticColorRequestDefaultTypeInternal;
extern SetStaticColorRequestDefaultTypeInternal _SetStaticColorRequest_default_instance_;
class TimeStamp;
struct TimeStampDefaultTypeInternal;
extern TimeStampDefaultTypeInternal _TimeStamp_default_instance_;
class UpgradeFirmwareRequest;
struct UpgradeFirmwareRequestDefaultTypeInternal;
extern UpgradeFirmwareRequestDefaultTypeInternal _UpgradeFirmwareRequest_default_instance_;
class UpgradeFirmwareResponse;
struct UpgradeFirmwareResponseDefaultTypeInternal;
extern UpgradeFirmwareResponseDefaultTypeInternal _UpgradeFirmwareResponse_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

enum Scene : int {
  SCENE_UNSPECIFIED = 0,
  Scene_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Scene_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Scene_IsValid(int value);
extern const uint32_t Scene_internal_data_[];
constexpr Scene Scene_MIN = static_cast<Scene>(0);
constexpr Scene Scene_MAX = static_cast<Scene>(0);
constexpr int Scene_ARRAYSIZE = 0 + 1;
const ::google::protobuf::EnumDescriptor*
Scene_descriptor();
template <typename T>
const std::string& Scene_Name(T value) {
  static_assert(std::is_same<T, Scene>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Scene_Name().");
  return Scene_Name(static_cast<Scene>(value));
}
template <>
inline const std::string& Scene_Name(Scene value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Scene_descriptor,
                                                 0, 0>(
      static_cast<int>(value));
}
inline bool Scene_Parse(absl::string_view name, Scene* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Scene>(
      Scene_descriptor(), name, value);
}
enum CommandCode : int {
  COMMAND_CODE_UNSPECIFIED = 0,
  COMMAND_CODE_GET_PROPERTIES = 1,
  COMMAND_CODE_SET_LIGHTING = 5,
  COMMAND_CODE_UPGRADE_FIRMWARE = 6,
  CommandCode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CommandCode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CommandCode_IsValid(int value);
extern const uint32_t CommandCode_internal_data_[];
constexpr CommandCode CommandCode_MIN = static_cast<CommandCode>(0);
constexpr CommandCode CommandCode_MAX = static_cast<CommandCode>(6);
constexpr int CommandCode_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
CommandCode_descriptor();
template <typename T>
const std::string& CommandCode_Name(T value) {
  static_assert(std::is_same<T, CommandCode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CommandCode_Name().");
  return CommandCode_Name(static_cast<CommandCode>(value));
}
template <>
inline const std::string& CommandCode_Name(CommandCode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CommandCode_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool CommandCode_Parse(absl::string_view name, CommandCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommandCode>(
      CommandCode_descriptor(), name, value);
}
enum Mode : int {
  MODE_UNSPECIFIED = 0,
  MODE_MANUAL = 1,
  MODE_SCHEDULE = 2,
  Mode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Mode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Mode_IsValid(int value);
extern const uint32_t Mode_internal_data_[];
constexpr Mode Mode_MIN = static_cast<Mode>(0);
constexpr Mode Mode_MAX = static_cast<Mode>(2);
constexpr int Mode_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
Mode_descriptor();
template <typename T>
const std::string& Mode_Name(T value) {
  static_assert(std::is_same<T, Mode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Mode_Name().");
  return Mode_Name(static_cast<Mode>(value));
}
template <>
inline const std::string& Mode_Name(Mode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Mode_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool Mode_Parse(absl::string_view name, Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Mode>(
      Mode_descriptor(), name, value);
}
enum LED : int {
  LED_UNSPECIFIED = 0,
  LED_WHITE = 1,
  LED_WARM_WHITE = 2,
  LED_RED = 3,
  LED_GREEN = 4,
  LED_BLUE = 5,
  LED_ROYAL_BLUE = 6,
  LED_ULTRA_VIOLET = 7,
  LED_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LED_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool LED_IsValid(int value);
extern const uint32_t LED_internal_data_[];
constexpr LED LED_MIN = static_cast<LED>(0);
constexpr LED LED_MAX = static_cast<LED>(7);
constexpr int LED_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
LED_descriptor();
template <typename T>
const std::string& LED_Name(T value) {
  static_assert(std::is_same<T, LED>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to LED_Name().");
  return LED_Name(static_cast<LED>(value));
}
template <>
inline const std::string& LED_Name(LED value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LED_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool LED_Parse(absl::string_view name, LED* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LED>(
      LED_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UpgradeFirmwareResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:UpgradeFirmwareResponse) */ {
 public:
  inline UpgradeFirmwareResponse() : UpgradeFirmwareResponse(nullptr) {}
  ~UpgradeFirmwareResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UpgradeFirmwareResponse(::google::protobuf::internal::ConstantInitialized);

  inline UpgradeFirmwareResponse(const UpgradeFirmwareResponse& from)
      : UpgradeFirmwareResponse(nullptr, from) {}
  UpgradeFirmwareResponse(UpgradeFirmwareResponse&& from) noexcept
    : UpgradeFirmwareResponse() {
    *this = ::std::move(from);
  }

  inline UpgradeFirmwareResponse& operator=(const UpgradeFirmwareResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpgradeFirmwareResponse& operator=(UpgradeFirmwareResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpgradeFirmwareResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpgradeFirmwareResponse* internal_default_instance() {
    return reinterpret_cast<const UpgradeFirmwareResponse*>(
               &_UpgradeFirmwareResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(UpgradeFirmwareResponse& a, UpgradeFirmwareResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UpgradeFirmwareResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpgradeFirmwareResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpgradeFirmwareResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpgradeFirmwareResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpgradeFirmwareResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UpgradeFirmwareResponse& from) {
    UpgradeFirmwareResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpgradeFirmwareResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "UpgradeFirmwareResponse";
  }
  protected:
  explicit UpgradeFirmwareResponse(::google::protobuf::Arena* arena);
  UpgradeFirmwareResponse(::google::protobuf::Arena* arena, const UpgradeFirmwareResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurrentVersionFieldNumber = 2,
    kIsLatestVersionFieldNumber = 1,
  };
  // string current_version = 2;
  void clear_current_version() ;
  const std::string& current_version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_current_version(Arg_&& arg, Args_... args);
  std::string* mutable_current_version();
  PROTOBUF_NODISCARD std::string* release_current_version();
  void set_allocated_current_version(std::string* value);

  private:
  const std::string& _internal_current_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_current_version(
      const std::string& value);
  std::string* _internal_mutable_current_version();

  public:
  // bool is_latest_version = 1;
  void clear_is_latest_version() ;
  bool is_latest_version() const;
  void set_is_latest_version(bool value);

  private:
  bool _internal_is_latest_version() const;
  void _internal_set_is_latest_version(bool value);

  public:
  // @@protoc_insertion_point(class_scope:UpgradeFirmwareResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr current_version_;
    bool is_latest_version_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmessage_2eproto;
};// -------------------------------------------------------------------

class UpgradeFirmwareRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:UpgradeFirmwareRequest) */ {
 public:
  inline UpgradeFirmwareRequest() : UpgradeFirmwareRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UpgradeFirmwareRequest(::google::protobuf::internal::ConstantInitialized);

  inline UpgradeFirmwareRequest(const UpgradeFirmwareRequest& from)
      : UpgradeFirmwareRequest(nullptr, from) {}
  UpgradeFirmwareRequest(UpgradeFirmwareRequest&& from) noexcept
    : UpgradeFirmwareRequest() {
    *this = ::std::move(from);
  }

  inline UpgradeFirmwareRequest& operator=(const UpgradeFirmwareRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpgradeFirmwareRequest& operator=(UpgradeFirmwareRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpgradeFirmwareRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpgradeFirmwareRequest* internal_default_instance() {
    return reinterpret_cast<const UpgradeFirmwareRequest*>(
               &_UpgradeFirmwareRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(UpgradeFirmwareRequest& a, UpgradeFirmwareRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpgradeFirmwareRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpgradeFirmwareRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpgradeFirmwareRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UpgradeFirmwareRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const UpgradeFirmwareRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const UpgradeFirmwareRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "UpgradeFirmwareRequest";
  }
  protected:
  explicit UpgradeFirmwareRequest(::google::protobuf::Arena* arena);
  UpgradeFirmwareRequest(::google::protobuf::Arena* arena, const UpgradeFirmwareRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:UpgradeFirmwareRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_proto_2fmessage_2eproto;
};// -------------------------------------------------------------------

class TimeStamp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TimeStamp) */ {
 public:
  inline TimeStamp() : TimeStamp(nullptr) {}
  ~TimeStamp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR TimeStamp(::google::protobuf::internal::ConstantInitialized);

  inline TimeStamp(const TimeStamp& from)
      : TimeStamp(nullptr, from) {}
  TimeStamp(TimeStamp&& from) noexcept
    : TimeStamp() {
    *this = ::std::move(from);
  }

  inline TimeStamp& operator=(const TimeStamp& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimeStamp& operator=(TimeStamp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimeStamp& default_instance() {
    return *internal_default_instance();
  }
  static inline const TimeStamp* internal_default_instance() {
    return reinterpret_cast<const TimeStamp*>(
               &_TimeStamp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(TimeStamp& a, TimeStamp& b) {
    a.Swap(&b);
  }
  inline void Swap(TimeStamp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimeStamp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TimeStamp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<TimeStamp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TimeStamp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const TimeStamp& from) {
    TimeStamp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TimeStamp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "TimeStamp";
  }
  protected:
  explicit TimeStamp(::google::protobuf::Arena* arena);
  TimeStamp(::google::protobuf::Arena* arena, const TimeStamp& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSecondsFieldNumber = 1,
    kWhiteFieldNumber = 3,
    kWarmWhiteFieldNumber = 4,
    kRedFieldNumber = 5,
    kGreenFieldNumber = 6,
    kBlueFieldNumber = 7,
    kRoyalBlueFieldNumber = 8,
    kUltraVioletFieldNumber = 9,
  };
  // uint32 seconds = 1;
  void clear_seconds() ;
  ::uint32_t seconds() const;
  void set_seconds(::uint32_t value);

  private:
  ::uint32_t _internal_seconds() const;
  void _internal_set_seconds(::uint32_t value);

  public:
  // uint32 white = 3;
  void clear_white() ;
  ::uint32_t white() const;
  void set_white(::uint32_t value);

  private:
  ::uint32_t _internal_white() const;
  void _internal_set_white(::uint32_t value);

  public:
  // uint32 warm_white = 4;
  void clear_warm_white() ;
  ::uint32_t warm_white() const;
  void set_warm_white(::uint32_t value);

  private:
  ::uint32_t _internal_warm_white() const;
  void _internal_set_warm_white(::uint32_t value);

  public:
  // uint32 red = 5;
  void clear_red() ;
  ::uint32_t red() const;
  void set_red(::uint32_t value);

  private:
  ::uint32_t _internal_red() const;
  void _internal_set_red(::uint32_t value);

  public:
  // uint32 green = 6;
  void clear_green() ;
  ::uint32_t green() const;
  void set_green(::uint32_t value);

  private:
  ::uint32_t _internal_green() const;
  void _internal_set_green(::uint32_t value);

  public:
  // uint32 blue = 7;
  void clear_blue() ;
  ::uint32_t blue() const;
  void set_blue(::uint32_t value);

  private:
  ::uint32_t _internal_blue() const;
  void _internal_set_blue(::uint32_t value);

  public:
  // uint32 royal_blue = 8;
  void clear_royal_blue() ;
  ::uint32_t royal_blue() const;
  void set_royal_blue(::uint32_t value);

  private:
  ::uint32_t _internal_royal_blue() const;
  void _internal_set_royal_blue(::uint32_t value);

  public:
  // uint32 ultra_violet = 9;
  void clear_ultra_violet() ;
  ::uint32_t ultra_violet() const;
  void set_ultra_violet(::uint32_t value);

  private:
  ::uint32_t _internal_ultra_violet() const;
  void _internal_set_ultra_violet(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:TimeStamp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 8, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t seconds_;
    ::uint32_t white_;
    ::uint32_t warm_white_;
    ::uint32_t red_;
    ::uint32_t green_;
    ::uint32_t blue_;
    ::uint32_t royal_blue_;
    ::uint32_t ultra_violet_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmessage_2eproto;
};// -------------------------------------------------------------------

class SetStaticColorRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetStaticColorRequest) */ {
 public:
  inline SetStaticColorRequest() : SetStaticColorRequest(nullptr) {}
  ~SetStaticColorRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetStaticColorRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetStaticColorRequest(const SetStaticColorRequest& from)
      : SetStaticColorRequest(nullptr, from) {}
  SetStaticColorRequest(SetStaticColorRequest&& from) noexcept
    : SetStaticColorRequest() {
    *this = ::std::move(from);
  }

  inline SetStaticColorRequest& operator=(const SetStaticColorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetStaticColorRequest& operator=(SetStaticColorRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetStaticColorRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetStaticColorRequest* internal_default_instance() {
    return reinterpret_cast<const SetStaticColorRequest*>(
               &_SetStaticColorRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(SetStaticColorRequest& a, SetStaticColorRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetStaticColorRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetStaticColorRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetStaticColorRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetStaticColorRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetStaticColorRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetStaticColorRequest& from) {
    SetStaticColorRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetStaticColorRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SetStaticColorRequest";
  }
  protected:
  explicit SetStaticColorRequest(::google::protobuf::Arena* arena);
  SetStaticColorRequest(::google::protobuf::Arena* arena, const SetStaticColorRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWhiteFieldNumber = 1,
    kWarmWhiteFieldNumber = 2,
    kRedFieldNumber = 3,
    kGreenFieldNumber = 4,
    kBlueFieldNumber = 5,
    kRoyalBlueFieldNumber = 6,
    kUltraVioletFieldNumber = 7,
  };
  // uint32 white = 1;
  void clear_white() ;
  ::uint32_t white() const;
  void set_white(::uint32_t value);

  private:
  ::uint32_t _internal_white() const;
  void _internal_set_white(::uint32_t value);

  public:
  // uint32 warm_white = 2;
  void clear_warm_white() ;
  ::uint32_t warm_white() const;
  void set_warm_white(::uint32_t value);

  private:
  ::uint32_t _internal_warm_white() const;
  void _internal_set_warm_white(::uint32_t value);

  public:
  // uint32 red = 3;
  void clear_red() ;
  ::uint32_t red() const;
  void set_red(::uint32_t value);

  private:
  ::uint32_t _internal_red() const;
  void _internal_set_red(::uint32_t value);

  public:
  // uint32 green = 4;
  void clear_green() ;
  ::uint32_t green() const;
  void set_green(::uint32_t value);

  private:
  ::uint32_t _internal_green() const;
  void _internal_set_green(::uint32_t value);

  public:
  // uint32 blue = 5;
  void clear_blue() ;
  ::uint32_t blue() const;
  void set_blue(::uint32_t value);

  private:
  ::uint32_t _internal_blue() const;
  void _internal_set_blue(::uint32_t value);

  public:
  // uint32 royal_blue = 6;
  void clear_royal_blue() ;
  ::uint32_t royal_blue() const;
  void set_royal_blue(::uint32_t value);

  private:
  ::uint32_t _internal_royal_blue() const;
  void _internal_set_royal_blue(::uint32_t value);

  public:
  // uint32 ultra_violet = 7;
  void clear_ultra_violet() ;
  ::uint32_t ultra_violet() const;
  void set_ultra_violet(::uint32_t value);

  private:
  ::uint32_t _internal_ultra_violet() const;
  void _internal_set_ultra_violet(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:SetStaticColorRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t white_;
    ::uint32_t warm_white_;
    ::uint32_t red_;
    ::uint32_t green_;
    ::uint32_t blue_;
    ::uint32_t royal_blue_;
    ::uint32_t ultra_violet_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmessage_2eproto;
};// -------------------------------------------------------------------

class SetSceneRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetSceneRequest) */ {
 public:
  inline SetSceneRequest() : SetSceneRequest(nullptr) {}
  ~SetSceneRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetSceneRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetSceneRequest(const SetSceneRequest& from)
      : SetSceneRequest(nullptr, from) {}
  SetSceneRequest(SetSceneRequest&& from) noexcept
    : SetSceneRequest() {
    *this = ::std::move(from);
  }

  inline SetSceneRequest& operator=(const SetSceneRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetSceneRequest& operator=(SetSceneRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetSceneRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetSceneRequest* internal_default_instance() {
    return reinterpret_cast<const SetSceneRequest*>(
               &_SetSceneRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SetSceneRequest& a, SetSceneRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetSceneRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetSceneRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetSceneRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetSceneRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetSceneRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetSceneRequest& from) {
    SetSceneRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetSceneRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SetSceneRequest";
  }
  protected:
  explicit SetSceneRequest(::google::protobuf::Arena* arena);
  SetSceneRequest(::google::protobuf::Arena* arena, const SetSceneRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneFieldNumber = 1,
  };
  // .Scene scene = 1;
  void clear_scene() ;
  ::Scene scene() const;
  void set_scene(::Scene value);

  private:
  ::Scene _internal_scene() const;
  void _internal_set_scene(::Scene value);

  public:
  // @@protoc_insertion_point(class_scope:SetSceneRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int scene_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmessage_2eproto;
};// -------------------------------------------------------------------

class SetColorModeRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SetColorModeRequest) */ {
 public:
  inline SetColorModeRequest() : SetColorModeRequest(nullptr) {}
  ~SetColorModeRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetColorModeRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetColorModeRequest(const SetColorModeRequest& from)
      : SetColorModeRequest(nullptr, from) {}
  SetColorModeRequest(SetColorModeRequest&& from) noexcept
    : SetColorModeRequest() {
    *this = ::std::move(from);
  }

  inline SetColorModeRequest& operator=(const SetColorModeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetColorModeRequest& operator=(SetColorModeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetColorModeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetColorModeRequest* internal_default_instance() {
    return reinterpret_cast<const SetColorModeRequest*>(
               &_SetColorModeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(SetColorModeRequest& a, SetColorModeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetColorModeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetColorModeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetColorModeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetColorModeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetColorModeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetColorModeRequest& from) {
    SetColorModeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetColorModeRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "SetColorModeRequest";
  }
  protected:
  explicit SetColorModeRequest(::google::protobuf::Arena* arena);
  SetColorModeRequest(::google::protobuf::Arena* arena, const SetColorModeRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModeFieldNumber = 1,
  };
  // .Mode mode = 1;
  void clear_mode() ;
  ::Mode mode() const;
  void set_mode(::Mode value);

  private:
  ::Mode _internal_mode() const;
  void _internal_set_mode(::Mode value);

  public:
  // @@protoc_insertion_point(class_scope:SetColorModeRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int mode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmessage_2eproto;
};// -------------------------------------------------------------------

class RTCRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RTCRequest) */ {
 public:
  inline RTCRequest() : RTCRequest(nullptr) {}
  ~RTCRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RTCRequest(::google::protobuf::internal::ConstantInitialized);

  inline RTCRequest(const RTCRequest& from)
      : RTCRequest(nullptr, from) {}
  RTCRequest(RTCRequest&& from) noexcept
    : RTCRequest() {
    *this = ::std::move(from);
  }

  inline RTCRequest& operator=(const RTCRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RTCRequest& operator=(RTCRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RTCRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RTCRequest* internal_default_instance() {
    return reinterpret_cast<const RTCRequest*>(
               &_RTCRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(RTCRequest& a, RTCRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RTCRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RTCRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RTCRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RTCRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RTCRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RTCRequest& from) {
    RTCRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RTCRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "RTCRequest";
  }
  protected:
  explicit RTCRequest(::google::protobuf::Arena* arena);
  RTCRequest(::google::protobuf::Arena* arena, const RTCRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimestampFieldNumber = 1,
  };
  // uint32 timestamp = 1;
  void clear_timestamp() ;
  ::uint32_t timestamp() const;
  void set_timestamp(::uint32_t value);

  private:
  ::uint32_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:RTCRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t timestamp_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmessage_2eproto;
};// -------------------------------------------------------------------

class ListTimePointRequest_Time final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ListTimePointRequest.Time) */ {
 public:
  inline ListTimePointRequest_Time() : ListTimePointRequest_Time(nullptr) {}
  ~ListTimePointRequest_Time() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ListTimePointRequest_Time(::google::protobuf::internal::ConstantInitialized);

  inline ListTimePointRequest_Time(const ListTimePointRequest_Time& from)
      : ListTimePointRequest_Time(nullptr, from) {}
  ListTimePointRequest_Time(ListTimePointRequest_Time&& from) noexcept
    : ListTimePointRequest_Time() {
    *this = ::std::move(from);
  }

  inline ListTimePointRequest_Time& operator=(const ListTimePointRequest_Time& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListTimePointRequest_Time& operator=(ListTimePointRequest_Time&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListTimePointRequest_Time& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListTimePointRequest_Time* internal_default_instance() {
    return reinterpret_cast<const ListTimePointRequest_Time*>(
               &_ListTimePointRequest_Time_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ListTimePointRequest_Time& a, ListTimePointRequest_Time& b) {
    a.Swap(&b);
  }
  inline void Swap(ListTimePointRequest_Time* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListTimePointRequest_Time* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListTimePointRequest_Time* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListTimePointRequest_Time>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListTimePointRequest_Time& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ListTimePointRequest_Time& from) {
    ListTimePointRequest_Time::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListTimePointRequest_Time* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ListTimePointRequest.Time";
  }
  protected:
  explicit ListTimePointRequest_Time(::google::protobuf::Arena* arena);
  ListTimePointRequest_Time(::google::protobuf::Arena* arena, const ListTimePointRequest_Time& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHhFieldNumber = 1,
    kMmFieldNumber = 2,
  };
  // uint32 hh = 1;
  void clear_hh() ;
  ::uint32_t hh() const;
  void set_hh(::uint32_t value);

  private:
  ::uint32_t _internal_hh() const;
  void _internal_set_hh(::uint32_t value);

  public:
  // uint32 mm = 2;
  void clear_mm() ;
  ::uint32_t mm() const;
  void set_mm(::uint32_t value);

  private:
  ::uint32_t _internal_mm() const;
  void _internal_set_mm(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ListTimePointRequest.Time)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t hh_;
    ::uint32_t mm_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmessage_2eproto;
};// -------------------------------------------------------------------

class LightingScheduleRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LightingScheduleRequest) */ {
 public:
  inline LightingScheduleRequest() : LightingScheduleRequest(nullptr) {}
  ~LightingScheduleRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LightingScheduleRequest(::google::protobuf::internal::ConstantInitialized);

  inline LightingScheduleRequest(const LightingScheduleRequest& from)
      : LightingScheduleRequest(nullptr, from) {}
  LightingScheduleRequest(LightingScheduleRequest&& from) noexcept
    : LightingScheduleRequest() {
    *this = ::std::move(from);
  }

  inline LightingScheduleRequest& operator=(const LightingScheduleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LightingScheduleRequest& operator=(LightingScheduleRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LightingScheduleRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LightingScheduleRequest* internal_default_instance() {
    return reinterpret_cast<const LightingScheduleRequest*>(
               &_LightingScheduleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(LightingScheduleRequest& a, LightingScheduleRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LightingScheduleRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LightingScheduleRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LightingScheduleRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LightingScheduleRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LightingScheduleRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LightingScheduleRequest& from) {
    LightingScheduleRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LightingScheduleRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "LightingScheduleRequest";
  }
  protected:
  explicit LightingScheduleRequest(::google::protobuf::Arena* arena);
  LightingScheduleRequest(::google::protobuf::Arena* arena, const LightingScheduleRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHhFieldNumber = 1,
    kMmFieldNumber = 2,
    kWhiteFieldNumber = 3,
    kWarmWhiteFieldNumber = 4,
    kRedFieldNumber = 5,
    kGreenFieldNumber = 6,
    kBlueFieldNumber = 7,
    kRoyalBlueFieldNumber = 8,
    kUltraVioletFieldNumber = 9,
  };
  // uint32 hh = 1;
  void clear_hh() ;
  ::uint32_t hh() const;
  void set_hh(::uint32_t value);

  private:
  ::uint32_t _internal_hh() const;
  void _internal_set_hh(::uint32_t value);

  public:
  // uint32 mm = 2;
  void clear_mm() ;
  ::uint32_t mm() const;
  void set_mm(::uint32_t value);

  private:
  ::uint32_t _internal_mm() const;
  void _internal_set_mm(::uint32_t value);

  public:
  // uint32 white = 3;
  void clear_white() ;
  ::uint32_t white() const;
  void set_white(::uint32_t value);

  private:
  ::uint32_t _internal_white() const;
  void _internal_set_white(::uint32_t value);

  public:
  // uint32 warm_white = 4;
  void clear_warm_white() ;
  ::uint32_t warm_white() const;
  void set_warm_white(::uint32_t value);

  private:
  ::uint32_t _internal_warm_white() const;
  void _internal_set_warm_white(::uint32_t value);

  public:
  // uint32 red = 5;
  void clear_red() ;
  ::uint32_t red() const;
  void set_red(::uint32_t value);

  private:
  ::uint32_t _internal_red() const;
  void _internal_set_red(::uint32_t value);

  public:
  // uint32 green = 6;
  void clear_green() ;
  ::uint32_t green() const;
  void set_green(::uint32_t value);

  private:
  ::uint32_t _internal_green() const;
  void _internal_set_green(::uint32_t value);

  public:
  // uint32 blue = 7;
  void clear_blue() ;
  ::uint32_t blue() const;
  void set_blue(::uint32_t value);

  private:
  ::uint32_t _internal_blue() const;
  void _internal_set_blue(::uint32_t value);

  public:
  // uint32 royal_blue = 8;
  void clear_royal_blue() ;
  ::uint32_t royal_blue() const;
  void set_royal_blue(::uint32_t value);

  private:
  ::uint32_t _internal_royal_blue() const;
  void _internal_set_royal_blue(::uint32_t value);

  public:
  // uint32 ultra_violet = 9;
  void clear_ultra_violet() ;
  ::uint32_t ultra_violet() const;
  void set_ultra_violet(::uint32_t value);

  private:
  ::uint32_t _internal_ultra_violet() const;
  void _internal_set_ultra_violet(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:LightingScheduleRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t hh_;
    ::uint32_t mm_;
    ::uint32_t white_;
    ::uint32_t warm_white_;
    ::uint32_t red_;
    ::uint32_t green_;
    ::uint32_t blue_;
    ::uint32_t royal_blue_;
    ::uint32_t ultra_violet_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmessage_2eproto;
};// -------------------------------------------------------------------

class GetSceneResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GetSceneResponse) */ {
 public:
  inline GetSceneResponse() : GetSceneResponse(nullptr) {}
  ~GetSceneResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetSceneResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetSceneResponse(const GetSceneResponse& from)
      : GetSceneResponse(nullptr, from) {}
  GetSceneResponse(GetSceneResponse&& from) noexcept
    : GetSceneResponse() {
    *this = ::std::move(from);
  }

  inline GetSceneResponse& operator=(const GetSceneResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSceneResponse& operator=(GetSceneResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSceneResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSceneResponse* internal_default_instance() {
    return reinterpret_cast<const GetSceneResponse*>(
               &_GetSceneResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GetSceneResponse& a, GetSceneResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSceneResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSceneResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSceneResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetSceneResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSceneResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetSceneResponse& from) {
    GetSceneResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetSceneResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "GetSceneResponse";
  }
  protected:
  explicit GetSceneResponse(::google::protobuf::Arena* arena);
  GetSceneResponse(::google::protobuf::Arena* arena, const GetSceneResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneFieldNumber = 1,
  };
  // .Scene scene = 1;
  void clear_scene() ;
  ::Scene scene() const;
  void set_scene(::Scene value);

  private:
  ::Scene _internal_scene() const;
  void _internal_set_scene(::Scene value);

  public:
  // @@protoc_insertion_point(class_scope:GetSceneResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    int scene_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmessage_2eproto;
};// -------------------------------------------------------------------

class DeviceInformationResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DeviceInformationResponse) */ {
 public:
  inline DeviceInformationResponse() : DeviceInformationResponse(nullptr) {}
  ~DeviceInformationResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceInformationResponse(::google::protobuf::internal::ConstantInitialized);

  inline DeviceInformationResponse(const DeviceInformationResponse& from)
      : DeviceInformationResponse(nullptr, from) {}
  DeviceInformationResponse(DeviceInformationResponse&& from) noexcept
    : DeviceInformationResponse() {
    *this = ::std::move(from);
  }

  inline DeviceInformationResponse& operator=(const DeviceInformationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceInformationResponse& operator=(DeviceInformationResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceInformationResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceInformationResponse* internal_default_instance() {
    return reinterpret_cast<const DeviceInformationResponse*>(
               &_DeviceInformationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DeviceInformationResponse& a, DeviceInformationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeviceInformationResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceInformationResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceInformationResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeviceInformationResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeviceInformationResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DeviceInformationResponse& from) {
    DeviceInformationResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeviceInformationResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "DeviceInformationResponse";
  }
  protected:
  explicit DeviceInformationResponse(::google::protobuf::Arena* arena);
  DeviceInformationResponse(::google::protobuf::Arena* arena, const DeviceInformationResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 3,
    kIdFieldNumber = 4,
    kVersionFieldNumber = 5,
    kModeFieldNumber = 1,
    kCurrentTimestampsFieldNumber = 2,
  };
  // string name = 3;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string id = 4;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string version = 5;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // .Mode mode = 1;
  void clear_mode() ;
  ::Mode mode() const;
  void set_mode(::Mode value);

  private:
  ::Mode _internal_mode() const;
  void _internal_set_mode(::Mode value);

  public:
  // uint32 current_timestamps = 2;
  void clear_current_timestamps() ;
  ::uint32_t current_timestamps() const;
  void set_current_timestamps(::uint32_t value);

  private:
  ::uint32_t _internal_current_timestamps() const;
  void _internal_set_current_timestamps(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:DeviceInformationResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    int mode_;
    ::uint32_t current_timestamps_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmessage_2eproto;
};// -------------------------------------------------------------------

class DeviceInformationRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:DeviceInformationRequest) */ {
 public:
  inline DeviceInformationRequest() : DeviceInformationRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DeviceInformationRequest(::google::protobuf::internal::ConstantInitialized);

  inline DeviceInformationRequest(const DeviceInformationRequest& from)
      : DeviceInformationRequest(nullptr, from) {}
  DeviceInformationRequest(DeviceInformationRequest&& from) noexcept
    : DeviceInformationRequest() {
    *this = ::std::move(from);
  }

  inline DeviceInformationRequest& operator=(const DeviceInformationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceInformationRequest& operator=(DeviceInformationRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeviceInformationRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeviceInformationRequest* internal_default_instance() {
    return reinterpret_cast<const DeviceInformationRequest*>(
               &_DeviceInformationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(DeviceInformationRequest& a, DeviceInformationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeviceInformationRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeviceInformationRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeviceInformationRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeviceInformationRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeviceInformationRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeviceInformationRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "DeviceInformationRequest";
  }
  protected:
  explicit DeviceInformationRequest(::google::protobuf::Arena* arena);
  DeviceInformationRequest(::google::protobuf::Arena* arena, const DeviceInformationRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:DeviceInformationRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_proto_2fmessage_2eproto;
};// -------------------------------------------------------------------

class ListTimePointRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ListTimePointRequest) */ {
 public:
  inline ListTimePointRequest() : ListTimePointRequest(nullptr) {}
  ~ListTimePointRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ListTimePointRequest(::google::protobuf::internal::ConstantInitialized);

  inline ListTimePointRequest(const ListTimePointRequest& from)
      : ListTimePointRequest(nullptr, from) {}
  ListTimePointRequest(ListTimePointRequest&& from) noexcept
    : ListTimePointRequest() {
    *this = ::std::move(from);
  }

  inline ListTimePointRequest& operator=(const ListTimePointRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListTimePointRequest& operator=(ListTimePointRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListTimePointRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListTimePointRequest* internal_default_instance() {
    return reinterpret_cast<const ListTimePointRequest*>(
               &_ListTimePointRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ListTimePointRequest& a, ListTimePointRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ListTimePointRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListTimePointRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListTimePointRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ListTimePointRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListTimePointRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ListTimePointRequest& from) {
    ListTimePointRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListTimePointRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ListTimePointRequest";
  }
  protected:
  explicit ListTimePointRequest(::google::protobuf::Arena* arena);
  ListTimePointRequest(::google::protobuf::Arena* arena, const ListTimePointRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Time = ListTimePointRequest_Time;

  // accessors -------------------------------------------------------

  enum : int {
    kTimesFieldNumber = 1,
  };
  // repeated .ListTimePointRequest.Time times = 1;
  int times_size() const;
  private:
  int _internal_times_size() const;

  public:
  void clear_times() ;
  ::ListTimePointRequest_Time* mutable_times(int index);
  ::google::protobuf::RepeatedPtrField< ::ListTimePointRequest_Time >*
      mutable_times();
  private:
  const ::google::protobuf::RepeatedPtrField<::ListTimePointRequest_Time>& _internal_times() const;
  ::google::protobuf::RepeatedPtrField<::ListTimePointRequest_Time>* _internal_mutable_times();
  public:
  const ::ListTimePointRequest_Time& times(int index) const;
  ::ListTimePointRequest_Time* add_times();
  const ::google::protobuf::RepeatedPtrField< ::ListTimePointRequest_Time >&
      times() const;
  // @@protoc_insertion_point(class_scope:ListTimePointRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::ListTimePointRequest_Time > times_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmessage_2eproto;
};// -------------------------------------------------------------------

class Effect final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Effect) */ {
 public:
  inline Effect() : Effect(nullptr) {}
  ~Effect() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Effect(::google::protobuf::internal::ConstantInitialized);

  inline Effect(const Effect& from)
      : Effect(nullptr, from) {}
  Effect(Effect&& from) noexcept
    : Effect() {
    *this = ::std::move(from);
  }

  inline Effect& operator=(const Effect& from) {
    CopyFrom(from);
    return *this;
  }
  inline Effect& operator=(Effect&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Effect& default_instance() {
    return *internal_default_instance();
  }
  static inline const Effect* internal_default_instance() {
    return reinterpret_cast<const Effect*>(
               &_Effect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(Effect& a, Effect& b) {
    a.Swap(&b);
  }
  inline void Swap(Effect* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Effect* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Effect* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Effect>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Effect& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Effect& from) {
    Effect::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Effect* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "Effect";
  }
  protected:
  explicit Effect(::google::protobuf::Arena* arena);
  Effect(::google::protobuf::Arena* arena, const Effect& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimestampsFieldNumber = 2,
    kDurationFieldNumber = 1,
  };
  // repeated .TimeStamp timestamps = 2;
  int timestamps_size() const;
  private:
  int _internal_timestamps_size() const;

  public:
  void clear_timestamps() ;
  ::TimeStamp* mutable_timestamps(int index);
  ::google::protobuf::RepeatedPtrField< ::TimeStamp >*
      mutable_timestamps();
  private:
  const ::google::protobuf::RepeatedPtrField<::TimeStamp>& _internal_timestamps() const;
  ::google::protobuf::RepeatedPtrField<::TimeStamp>* _internal_mutable_timestamps();
  public:
  const ::TimeStamp& timestamps(int index) const;
  ::TimeStamp* add_timestamps();
  const ::google::protobuf::RepeatedPtrField< ::TimeStamp >&
      timestamps() const;
  // uint32 duration = 1;
  void clear_duration() ;
  ::uint32_t duration() const;
  void set_duration(::uint32_t value);

  private:
  ::uint32_t _internal_duration() const;
  void _internal_set_duration(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:Effect)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::TimeStamp > timestamps_;
    ::uint32_t duration_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fmessage_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DeviceInformationRequest

// -------------------------------------------------------------------

// DeviceInformationResponse

// .Mode mode = 1;
inline void DeviceInformationResponse::clear_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mode_ = 0;
}
inline ::Mode DeviceInformationResponse::mode() const {
  // @@protoc_insertion_point(field_get:DeviceInformationResponse.mode)
  return _internal_mode();
}
inline void DeviceInformationResponse::set_mode(::Mode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:DeviceInformationResponse.mode)
}
inline ::Mode DeviceInformationResponse::_internal_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Mode>(_impl_.mode_);
}
inline void DeviceInformationResponse::_internal_set_mode(::Mode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mode_ = value;
}

// uint32 current_timestamps = 2;
inline void DeviceInformationResponse::clear_current_timestamps() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.current_timestamps_ = 0u;
}
inline ::uint32_t DeviceInformationResponse::current_timestamps() const {
  // @@protoc_insertion_point(field_get:DeviceInformationResponse.current_timestamps)
  return _internal_current_timestamps();
}
inline void DeviceInformationResponse::set_current_timestamps(::uint32_t value) {
  _internal_set_current_timestamps(value);
  // @@protoc_insertion_point(field_set:DeviceInformationResponse.current_timestamps)
}
inline ::uint32_t DeviceInformationResponse::_internal_current_timestamps() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.current_timestamps_;
}
inline void DeviceInformationResponse::_internal_set_current_timestamps(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.current_timestamps_ = value;
}

// string name = 3;
inline void DeviceInformationResponse::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& DeviceInformationResponse::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DeviceInformationResponse.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceInformationResponse::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DeviceInformationResponse.name)
}
inline std::string* DeviceInformationResponse::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:DeviceInformationResponse.name)
  return _s;
}
inline const std::string& DeviceInformationResponse::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void DeviceInformationResponse::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* DeviceInformationResponse::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* DeviceInformationResponse::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:DeviceInformationResponse.name)
  return _impl_.name_.Release();
}
inline void DeviceInformationResponse::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DeviceInformationResponse.name)
}

// string id = 4;
inline void DeviceInformationResponse::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& DeviceInformationResponse::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DeviceInformationResponse.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceInformationResponse::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DeviceInformationResponse.id)
}
inline std::string* DeviceInformationResponse::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:DeviceInformationResponse.id)
  return _s;
}
inline const std::string& DeviceInformationResponse::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void DeviceInformationResponse::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* DeviceInformationResponse::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* DeviceInformationResponse::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:DeviceInformationResponse.id)
  return _impl_.id_.Release();
}
inline void DeviceInformationResponse::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DeviceInformationResponse.id)
}

// string version = 5;
inline void DeviceInformationResponse::clear_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& DeviceInformationResponse::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:DeviceInformationResponse.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeviceInformationResponse::set_version(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:DeviceInformationResponse.version)
}
inline std::string* DeviceInformationResponse::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:DeviceInformationResponse.version)
  return _s;
}
inline const std::string& DeviceInformationResponse::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_.Get();
}
inline void DeviceInformationResponse::_internal_set_version(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(value, GetArena());
}
inline std::string* DeviceInformationResponse::_internal_mutable_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* DeviceInformationResponse::release_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:DeviceInformationResponse.version)
  return _impl_.version_.Release();
}
inline void DeviceInformationResponse::set_allocated_version(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.version_.IsDefault()) {
          _impl_.version_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:DeviceInformationResponse.version)
}

// -------------------------------------------------------------------

// SetColorModeRequest

// .Mode mode = 1;
inline void SetColorModeRequest::clear_mode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mode_ = 0;
}
inline ::Mode SetColorModeRequest::mode() const {
  // @@protoc_insertion_point(field_get:SetColorModeRequest.mode)
  return _internal_mode();
}
inline void SetColorModeRequest::set_mode(::Mode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:SetColorModeRequest.mode)
}
inline ::Mode SetColorModeRequest::_internal_mode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Mode>(_impl_.mode_);
}
inline void SetColorModeRequest::_internal_set_mode(::Mode value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mode_ = value;
}

// -------------------------------------------------------------------

// SetStaticColorRequest

// uint32 white = 1;
inline void SetStaticColorRequest::clear_white() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.white_ = 0u;
}
inline ::uint32_t SetStaticColorRequest::white() const {
  // @@protoc_insertion_point(field_get:SetStaticColorRequest.white)
  return _internal_white();
}
inline void SetStaticColorRequest::set_white(::uint32_t value) {
  _internal_set_white(value);
  // @@protoc_insertion_point(field_set:SetStaticColorRequest.white)
}
inline ::uint32_t SetStaticColorRequest::_internal_white() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.white_;
}
inline void SetStaticColorRequest::_internal_set_white(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.white_ = value;
}

// uint32 warm_white = 2;
inline void SetStaticColorRequest::clear_warm_white() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.warm_white_ = 0u;
}
inline ::uint32_t SetStaticColorRequest::warm_white() const {
  // @@protoc_insertion_point(field_get:SetStaticColorRequest.warm_white)
  return _internal_warm_white();
}
inline void SetStaticColorRequest::set_warm_white(::uint32_t value) {
  _internal_set_warm_white(value);
  // @@protoc_insertion_point(field_set:SetStaticColorRequest.warm_white)
}
inline ::uint32_t SetStaticColorRequest::_internal_warm_white() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.warm_white_;
}
inline void SetStaticColorRequest::_internal_set_warm_white(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.warm_white_ = value;
}

// uint32 red = 3;
inline void SetStaticColorRequest::clear_red() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.red_ = 0u;
}
inline ::uint32_t SetStaticColorRequest::red() const {
  // @@protoc_insertion_point(field_get:SetStaticColorRequest.red)
  return _internal_red();
}
inline void SetStaticColorRequest::set_red(::uint32_t value) {
  _internal_set_red(value);
  // @@protoc_insertion_point(field_set:SetStaticColorRequest.red)
}
inline ::uint32_t SetStaticColorRequest::_internal_red() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.red_;
}
inline void SetStaticColorRequest::_internal_set_red(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.red_ = value;
}

// uint32 green = 4;
inline void SetStaticColorRequest::clear_green() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.green_ = 0u;
}
inline ::uint32_t SetStaticColorRequest::green() const {
  // @@protoc_insertion_point(field_get:SetStaticColorRequest.green)
  return _internal_green();
}
inline void SetStaticColorRequest::set_green(::uint32_t value) {
  _internal_set_green(value);
  // @@protoc_insertion_point(field_set:SetStaticColorRequest.green)
}
inline ::uint32_t SetStaticColorRequest::_internal_green() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.green_;
}
inline void SetStaticColorRequest::_internal_set_green(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.green_ = value;
}

// uint32 blue = 5;
inline void SetStaticColorRequest::clear_blue() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.blue_ = 0u;
}
inline ::uint32_t SetStaticColorRequest::blue() const {
  // @@protoc_insertion_point(field_get:SetStaticColorRequest.blue)
  return _internal_blue();
}
inline void SetStaticColorRequest::set_blue(::uint32_t value) {
  _internal_set_blue(value);
  // @@protoc_insertion_point(field_set:SetStaticColorRequest.blue)
}
inline ::uint32_t SetStaticColorRequest::_internal_blue() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.blue_;
}
inline void SetStaticColorRequest::_internal_set_blue(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.blue_ = value;
}

// uint32 royal_blue = 6;
inline void SetStaticColorRequest::clear_royal_blue() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.royal_blue_ = 0u;
}
inline ::uint32_t SetStaticColorRequest::royal_blue() const {
  // @@protoc_insertion_point(field_get:SetStaticColorRequest.royal_blue)
  return _internal_royal_blue();
}
inline void SetStaticColorRequest::set_royal_blue(::uint32_t value) {
  _internal_set_royal_blue(value);
  // @@protoc_insertion_point(field_set:SetStaticColorRequest.royal_blue)
}
inline ::uint32_t SetStaticColorRequest::_internal_royal_blue() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.royal_blue_;
}
inline void SetStaticColorRequest::_internal_set_royal_blue(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.royal_blue_ = value;
}

// uint32 ultra_violet = 7;
inline void SetStaticColorRequest::clear_ultra_violet() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ultra_violet_ = 0u;
}
inline ::uint32_t SetStaticColorRequest::ultra_violet() const {
  // @@protoc_insertion_point(field_get:SetStaticColorRequest.ultra_violet)
  return _internal_ultra_violet();
}
inline void SetStaticColorRequest::set_ultra_violet(::uint32_t value) {
  _internal_set_ultra_violet(value);
  // @@protoc_insertion_point(field_set:SetStaticColorRequest.ultra_violet)
}
inline ::uint32_t SetStaticColorRequest::_internal_ultra_violet() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ultra_violet_;
}
inline void SetStaticColorRequest::_internal_set_ultra_violet(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ultra_violet_ = value;
}

// -------------------------------------------------------------------

// RTCRequest

// uint32 timestamp = 1;
inline void RTCRequest::clear_timestamp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timestamp_ = 0u;
}
inline ::uint32_t RTCRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:RTCRequest.timestamp)
  return _internal_timestamp();
}
inline void RTCRequest::set_timestamp(::uint32_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:RTCRequest.timestamp)
}
inline ::uint32_t RTCRequest::_internal_timestamp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timestamp_;
}
inline void RTCRequest::_internal_set_timestamp(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timestamp_ = value;
}

// -------------------------------------------------------------------

// ListTimePointRequest_Time

// uint32 hh = 1;
inline void ListTimePointRequest_Time::clear_hh() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.hh_ = 0u;
}
inline ::uint32_t ListTimePointRequest_Time::hh() const {
  // @@protoc_insertion_point(field_get:ListTimePointRequest.Time.hh)
  return _internal_hh();
}
inline void ListTimePointRequest_Time::set_hh(::uint32_t value) {
  _internal_set_hh(value);
  // @@protoc_insertion_point(field_set:ListTimePointRequest.Time.hh)
}
inline ::uint32_t ListTimePointRequest_Time::_internal_hh() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.hh_;
}
inline void ListTimePointRequest_Time::_internal_set_hh(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.hh_ = value;
}

// uint32 mm = 2;
inline void ListTimePointRequest_Time::clear_mm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mm_ = 0u;
}
inline ::uint32_t ListTimePointRequest_Time::mm() const {
  // @@protoc_insertion_point(field_get:ListTimePointRequest.Time.mm)
  return _internal_mm();
}
inline void ListTimePointRequest_Time::set_mm(::uint32_t value) {
  _internal_set_mm(value);
  // @@protoc_insertion_point(field_set:ListTimePointRequest.Time.mm)
}
inline ::uint32_t ListTimePointRequest_Time::_internal_mm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mm_;
}
inline void ListTimePointRequest_Time::_internal_set_mm(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mm_ = value;
}

// -------------------------------------------------------------------

// ListTimePointRequest

// repeated .ListTimePointRequest.Time times = 1;
inline int ListTimePointRequest::_internal_times_size() const {
  return _internal_times().size();
}
inline int ListTimePointRequest::times_size() const {
  return _internal_times_size();
}
inline void ListTimePointRequest::clear_times() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.times_.Clear();
}
inline ::ListTimePointRequest_Time* ListTimePointRequest::mutable_times(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:ListTimePointRequest.times)
  return _internal_mutable_times()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::ListTimePointRequest_Time>* ListTimePointRequest::mutable_times()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ListTimePointRequest.times)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_times();
}
inline const ::ListTimePointRequest_Time& ListTimePointRequest::times(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:ListTimePointRequest.times)
  return _internal_times().Get(index);
}
inline ::ListTimePointRequest_Time* ListTimePointRequest::add_times() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::ListTimePointRequest_Time* _add = _internal_mutable_times()->Add();
  // @@protoc_insertion_point(field_add:ListTimePointRequest.times)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::ListTimePointRequest_Time>& ListTimePointRequest::times() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ListTimePointRequest.times)
  return _internal_times();
}
inline const ::google::protobuf::RepeatedPtrField<::ListTimePointRequest_Time>&
ListTimePointRequest::_internal_times() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.times_;
}
inline ::google::protobuf::RepeatedPtrField<::ListTimePointRequest_Time>*
ListTimePointRequest::_internal_mutable_times() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.times_;
}

// -------------------------------------------------------------------

// LightingScheduleRequest

// uint32 hh = 1;
inline void LightingScheduleRequest::clear_hh() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.hh_ = 0u;
}
inline ::uint32_t LightingScheduleRequest::hh() const {
  // @@protoc_insertion_point(field_get:LightingScheduleRequest.hh)
  return _internal_hh();
}
inline void LightingScheduleRequest::set_hh(::uint32_t value) {
  _internal_set_hh(value);
  // @@protoc_insertion_point(field_set:LightingScheduleRequest.hh)
}
inline ::uint32_t LightingScheduleRequest::_internal_hh() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.hh_;
}
inline void LightingScheduleRequest::_internal_set_hh(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.hh_ = value;
}

// uint32 mm = 2;
inline void LightingScheduleRequest::clear_mm() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.mm_ = 0u;
}
inline ::uint32_t LightingScheduleRequest::mm() const {
  // @@protoc_insertion_point(field_get:LightingScheduleRequest.mm)
  return _internal_mm();
}
inline void LightingScheduleRequest::set_mm(::uint32_t value) {
  _internal_set_mm(value);
  // @@protoc_insertion_point(field_set:LightingScheduleRequest.mm)
}
inline ::uint32_t LightingScheduleRequest::_internal_mm() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.mm_;
}
inline void LightingScheduleRequest::_internal_set_mm(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.mm_ = value;
}

// uint32 white = 3;
inline void LightingScheduleRequest::clear_white() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.white_ = 0u;
}
inline ::uint32_t LightingScheduleRequest::white() const {
  // @@protoc_insertion_point(field_get:LightingScheduleRequest.white)
  return _internal_white();
}
inline void LightingScheduleRequest::set_white(::uint32_t value) {
  _internal_set_white(value);
  // @@protoc_insertion_point(field_set:LightingScheduleRequest.white)
}
inline ::uint32_t LightingScheduleRequest::_internal_white() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.white_;
}
inline void LightingScheduleRequest::_internal_set_white(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.white_ = value;
}

// uint32 warm_white = 4;
inline void LightingScheduleRequest::clear_warm_white() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.warm_white_ = 0u;
}
inline ::uint32_t LightingScheduleRequest::warm_white() const {
  // @@protoc_insertion_point(field_get:LightingScheduleRequest.warm_white)
  return _internal_warm_white();
}
inline void LightingScheduleRequest::set_warm_white(::uint32_t value) {
  _internal_set_warm_white(value);
  // @@protoc_insertion_point(field_set:LightingScheduleRequest.warm_white)
}
inline ::uint32_t LightingScheduleRequest::_internal_warm_white() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.warm_white_;
}
inline void LightingScheduleRequest::_internal_set_warm_white(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.warm_white_ = value;
}

// uint32 red = 5;
inline void LightingScheduleRequest::clear_red() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.red_ = 0u;
}
inline ::uint32_t LightingScheduleRequest::red() const {
  // @@protoc_insertion_point(field_get:LightingScheduleRequest.red)
  return _internal_red();
}
inline void LightingScheduleRequest::set_red(::uint32_t value) {
  _internal_set_red(value);
  // @@protoc_insertion_point(field_set:LightingScheduleRequest.red)
}
inline ::uint32_t LightingScheduleRequest::_internal_red() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.red_;
}
inline void LightingScheduleRequest::_internal_set_red(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.red_ = value;
}

// uint32 green = 6;
inline void LightingScheduleRequest::clear_green() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.green_ = 0u;
}
inline ::uint32_t LightingScheduleRequest::green() const {
  // @@protoc_insertion_point(field_get:LightingScheduleRequest.green)
  return _internal_green();
}
inline void LightingScheduleRequest::set_green(::uint32_t value) {
  _internal_set_green(value);
  // @@protoc_insertion_point(field_set:LightingScheduleRequest.green)
}
inline ::uint32_t LightingScheduleRequest::_internal_green() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.green_;
}
inline void LightingScheduleRequest::_internal_set_green(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.green_ = value;
}

// uint32 blue = 7;
inline void LightingScheduleRequest::clear_blue() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.blue_ = 0u;
}
inline ::uint32_t LightingScheduleRequest::blue() const {
  // @@protoc_insertion_point(field_get:LightingScheduleRequest.blue)
  return _internal_blue();
}
inline void LightingScheduleRequest::set_blue(::uint32_t value) {
  _internal_set_blue(value);
  // @@protoc_insertion_point(field_set:LightingScheduleRequest.blue)
}
inline ::uint32_t LightingScheduleRequest::_internal_blue() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.blue_;
}
inline void LightingScheduleRequest::_internal_set_blue(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.blue_ = value;
}

// uint32 royal_blue = 8;
inline void LightingScheduleRequest::clear_royal_blue() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.royal_blue_ = 0u;
}
inline ::uint32_t LightingScheduleRequest::royal_blue() const {
  // @@protoc_insertion_point(field_get:LightingScheduleRequest.royal_blue)
  return _internal_royal_blue();
}
inline void LightingScheduleRequest::set_royal_blue(::uint32_t value) {
  _internal_set_royal_blue(value);
  // @@protoc_insertion_point(field_set:LightingScheduleRequest.royal_blue)
}
inline ::uint32_t LightingScheduleRequest::_internal_royal_blue() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.royal_blue_;
}
inline void LightingScheduleRequest::_internal_set_royal_blue(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.royal_blue_ = value;
}

// uint32 ultra_violet = 9;
inline void LightingScheduleRequest::clear_ultra_violet() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ultra_violet_ = 0u;
}
inline ::uint32_t LightingScheduleRequest::ultra_violet() const {
  // @@protoc_insertion_point(field_get:LightingScheduleRequest.ultra_violet)
  return _internal_ultra_violet();
}
inline void LightingScheduleRequest::set_ultra_violet(::uint32_t value) {
  _internal_set_ultra_violet(value);
  // @@protoc_insertion_point(field_set:LightingScheduleRequest.ultra_violet)
}
inline ::uint32_t LightingScheduleRequest::_internal_ultra_violet() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ultra_violet_;
}
inline void LightingScheduleRequest::_internal_set_ultra_violet(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ultra_violet_ = value;
}

// -------------------------------------------------------------------

// SetSceneRequest

// .Scene scene = 1;
inline void SetSceneRequest::clear_scene() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.scene_ = 0;
}
inline ::Scene SetSceneRequest::scene() const {
  // @@protoc_insertion_point(field_get:SetSceneRequest.scene)
  return _internal_scene();
}
inline void SetSceneRequest::set_scene(::Scene value) {
  _internal_set_scene(value);
  // @@protoc_insertion_point(field_set:SetSceneRequest.scene)
}
inline ::Scene SetSceneRequest::_internal_scene() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Scene>(_impl_.scene_);
}
inline void SetSceneRequest::_internal_set_scene(::Scene value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.scene_ = value;
}

// -------------------------------------------------------------------

// GetSceneResponse

// .Scene scene = 1;
inline void GetSceneResponse::clear_scene() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.scene_ = 0;
}
inline ::Scene GetSceneResponse::scene() const {
  // @@protoc_insertion_point(field_get:GetSceneResponse.scene)
  return _internal_scene();
}
inline void GetSceneResponse::set_scene(::Scene value) {
  _internal_set_scene(value);
  // @@protoc_insertion_point(field_set:GetSceneResponse.scene)
}
inline ::Scene GetSceneResponse::_internal_scene() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::Scene>(_impl_.scene_);
}
inline void GetSceneResponse::_internal_set_scene(::Scene value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.scene_ = value;
}

// -------------------------------------------------------------------

// Effect

// uint32 duration = 1;
inline void Effect::clear_duration() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.duration_ = 0u;
}
inline ::uint32_t Effect::duration() const {
  // @@protoc_insertion_point(field_get:Effect.duration)
  return _internal_duration();
}
inline void Effect::set_duration(::uint32_t value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:Effect.duration)
}
inline ::uint32_t Effect::_internal_duration() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.duration_;
}
inline void Effect::_internal_set_duration(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.duration_ = value;
}

// repeated .TimeStamp timestamps = 2;
inline int Effect::_internal_timestamps_size() const {
  return _internal_timestamps().size();
}
inline int Effect::timestamps_size() const {
  return _internal_timestamps_size();
}
inline void Effect::clear_timestamps() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timestamps_.Clear();
}
inline ::TimeStamp* Effect::mutable_timestamps(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:Effect.timestamps)
  return _internal_mutable_timestamps()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::TimeStamp>* Effect::mutable_timestamps()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:Effect.timestamps)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_timestamps();
}
inline const ::TimeStamp& Effect::timestamps(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Effect.timestamps)
  return _internal_timestamps().Get(index);
}
inline ::TimeStamp* Effect::add_timestamps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::TimeStamp* _add = _internal_mutable_timestamps()->Add();
  // @@protoc_insertion_point(field_add:Effect.timestamps)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::TimeStamp>& Effect::timestamps() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:Effect.timestamps)
  return _internal_timestamps();
}
inline const ::google::protobuf::RepeatedPtrField<::TimeStamp>&
Effect::_internal_timestamps() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timestamps_;
}
inline ::google::protobuf::RepeatedPtrField<::TimeStamp>*
Effect::_internal_mutable_timestamps() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.timestamps_;
}

// -------------------------------------------------------------------

// UpgradeFirmwareRequest

// -------------------------------------------------------------------

// UpgradeFirmwareResponse

// bool is_latest_version = 1;
inline void UpgradeFirmwareResponse::clear_is_latest_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.is_latest_version_ = false;
}
inline bool UpgradeFirmwareResponse::is_latest_version() const {
  // @@protoc_insertion_point(field_get:UpgradeFirmwareResponse.is_latest_version)
  return _internal_is_latest_version();
}
inline void UpgradeFirmwareResponse::set_is_latest_version(bool value) {
  _internal_set_is_latest_version(value);
  // @@protoc_insertion_point(field_set:UpgradeFirmwareResponse.is_latest_version)
}
inline bool UpgradeFirmwareResponse::_internal_is_latest_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_latest_version_;
}
inline void UpgradeFirmwareResponse::_internal_set_is_latest_version(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_latest_version_ = value;
}

// string current_version = 2;
inline void UpgradeFirmwareResponse::clear_current_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.current_version_.ClearToEmpty();
}
inline const std::string& UpgradeFirmwareResponse::current_version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:UpgradeFirmwareResponse.current_version)
  return _internal_current_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpgradeFirmwareResponse::set_current_version(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.current_version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:UpgradeFirmwareResponse.current_version)
}
inline std::string* UpgradeFirmwareResponse::mutable_current_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_current_version();
  // @@protoc_insertion_point(field_mutable:UpgradeFirmwareResponse.current_version)
  return _s;
}
inline const std::string& UpgradeFirmwareResponse::_internal_current_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.current_version_.Get();
}
inline void UpgradeFirmwareResponse::_internal_set_current_version(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.current_version_.Set(value, GetArena());
}
inline std::string* UpgradeFirmwareResponse::_internal_mutable_current_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.current_version_.Mutable( GetArena());
}
inline std::string* UpgradeFirmwareResponse::release_current_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:UpgradeFirmwareResponse.current_version)
  return _impl_.current_version_.Release();
}
inline void UpgradeFirmwareResponse::set_allocated_current_version(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.current_version_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.current_version_.IsDefault()) {
          _impl_.current_version_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:UpgradeFirmwareResponse.current_version)
}

// -------------------------------------------------------------------

// TimeStamp

// uint32 seconds = 1;
inline void TimeStamp::clear_seconds() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.seconds_ = 0u;
}
inline ::uint32_t TimeStamp::seconds() const {
  // @@protoc_insertion_point(field_get:TimeStamp.seconds)
  return _internal_seconds();
}
inline void TimeStamp::set_seconds(::uint32_t value) {
  _internal_set_seconds(value);
  // @@protoc_insertion_point(field_set:TimeStamp.seconds)
}
inline ::uint32_t TimeStamp::_internal_seconds() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.seconds_;
}
inline void TimeStamp::_internal_set_seconds(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.seconds_ = value;
}

// uint32 white = 3;
inline void TimeStamp::clear_white() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.white_ = 0u;
}
inline ::uint32_t TimeStamp::white() const {
  // @@protoc_insertion_point(field_get:TimeStamp.white)
  return _internal_white();
}
inline void TimeStamp::set_white(::uint32_t value) {
  _internal_set_white(value);
  // @@protoc_insertion_point(field_set:TimeStamp.white)
}
inline ::uint32_t TimeStamp::_internal_white() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.white_;
}
inline void TimeStamp::_internal_set_white(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.white_ = value;
}

// uint32 warm_white = 4;
inline void TimeStamp::clear_warm_white() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.warm_white_ = 0u;
}
inline ::uint32_t TimeStamp::warm_white() const {
  // @@protoc_insertion_point(field_get:TimeStamp.warm_white)
  return _internal_warm_white();
}
inline void TimeStamp::set_warm_white(::uint32_t value) {
  _internal_set_warm_white(value);
  // @@protoc_insertion_point(field_set:TimeStamp.warm_white)
}
inline ::uint32_t TimeStamp::_internal_warm_white() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.warm_white_;
}
inline void TimeStamp::_internal_set_warm_white(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.warm_white_ = value;
}

// uint32 red = 5;
inline void TimeStamp::clear_red() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.red_ = 0u;
}
inline ::uint32_t TimeStamp::red() const {
  // @@protoc_insertion_point(field_get:TimeStamp.red)
  return _internal_red();
}
inline void TimeStamp::set_red(::uint32_t value) {
  _internal_set_red(value);
  // @@protoc_insertion_point(field_set:TimeStamp.red)
}
inline ::uint32_t TimeStamp::_internal_red() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.red_;
}
inline void TimeStamp::_internal_set_red(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.red_ = value;
}

// uint32 green = 6;
inline void TimeStamp::clear_green() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.green_ = 0u;
}
inline ::uint32_t TimeStamp::green() const {
  // @@protoc_insertion_point(field_get:TimeStamp.green)
  return _internal_green();
}
inline void TimeStamp::set_green(::uint32_t value) {
  _internal_set_green(value);
  // @@protoc_insertion_point(field_set:TimeStamp.green)
}
inline ::uint32_t TimeStamp::_internal_green() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.green_;
}
inline void TimeStamp::_internal_set_green(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.green_ = value;
}

// uint32 blue = 7;
inline void TimeStamp::clear_blue() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.blue_ = 0u;
}
inline ::uint32_t TimeStamp::blue() const {
  // @@protoc_insertion_point(field_get:TimeStamp.blue)
  return _internal_blue();
}
inline void TimeStamp::set_blue(::uint32_t value) {
  _internal_set_blue(value);
  // @@protoc_insertion_point(field_set:TimeStamp.blue)
}
inline ::uint32_t TimeStamp::_internal_blue() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.blue_;
}
inline void TimeStamp::_internal_set_blue(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.blue_ = value;
}

// uint32 royal_blue = 8;
inline void TimeStamp::clear_royal_blue() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.royal_blue_ = 0u;
}
inline ::uint32_t TimeStamp::royal_blue() const {
  // @@protoc_insertion_point(field_get:TimeStamp.royal_blue)
  return _internal_royal_blue();
}
inline void TimeStamp::set_royal_blue(::uint32_t value) {
  _internal_set_royal_blue(value);
  // @@protoc_insertion_point(field_set:TimeStamp.royal_blue)
}
inline ::uint32_t TimeStamp::_internal_royal_blue() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.royal_blue_;
}
inline void TimeStamp::_internal_set_royal_blue(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.royal_blue_ = value;
}

// uint32 ultra_violet = 9;
inline void TimeStamp::clear_ultra_violet() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ultra_violet_ = 0u;
}
inline ::uint32_t TimeStamp::ultra_violet() const {
  // @@protoc_insertion_point(field_get:TimeStamp.ultra_violet)
  return _internal_ultra_violet();
}
inline void TimeStamp::set_ultra_violet(::uint32_t value) {
  _internal_set_ultra_violet(value);
  // @@protoc_insertion_point(field_set:TimeStamp.ultra_violet)
}
inline ::uint32_t TimeStamp::_internal_ultra_violet() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ultra_violet_;
}
inline void TimeStamp::_internal_set_ultra_violet(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ultra_violet_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::Scene> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Scene>() {
  return ::Scene_descriptor();
}
template <>
struct is_proto_enum<::CommandCode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::CommandCode>() {
  return ::CommandCode_descriptor();
}
template <>
struct is_proto_enum<::Mode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::Mode>() {
  return ::Mode_descriptor();
}
template <>
struct is_proto_enum<::LED> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::LED>() {
  return ::LED_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_proto_2fmessage_2eproto_2epb_2eh
