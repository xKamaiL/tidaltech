// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/message.proto

#include "proto/message.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
      template <typename>
PROTOBUF_CONSTEXPR DeviceInformationRequest::DeviceInformationRequest(::_pbi::ConstantInitialized) {}
struct DeviceInformationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceInformationRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceInformationRequestDefaultTypeInternal() {}
  union {
    DeviceInformationRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceInformationRequestDefaultTypeInternal _DeviceInformationRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR DeviceInformationResponse::DeviceInformationResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.id_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.version_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.mode_)*/ 0,
      /*decltype(_impl_.current_timestamps_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct DeviceInformationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceInformationResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceInformationResponseDefaultTypeInternal() {}
  union {
    DeviceInformationResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceInformationResponseDefaultTypeInternal _DeviceInformationResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR LightingScheduleRequest::LightingScheduleRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.hh_)*/ 0u,
      /*decltype(_impl_.mm_)*/ 0u,
      /*decltype(_impl_.white_)*/ 0u,
      /*decltype(_impl_.warm_white_)*/ 0u,
      /*decltype(_impl_.red_)*/ 0u,
      /*decltype(_impl_.green_)*/ 0u,
      /*decltype(_impl_.blue_)*/ 0u,
      /*decltype(_impl_.royal_blue_)*/ 0u,
      /*decltype(_impl_.ultra_violet_)*/ 0u,
    } {}
struct LightingScheduleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LightingScheduleRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LightingScheduleRequestDefaultTypeInternal() {}
  union {
    LightingScheduleRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LightingScheduleRequestDefaultTypeInternal _LightingScheduleRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR SetSceneRequest::SetSceneRequest(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.scene_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct SetSceneRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SetSceneRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SetSceneRequestDefaultTypeInternal() {}
  union {
    SetSceneRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SetSceneRequestDefaultTypeInternal _SetSceneRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR GetSceneResponse::GetSceneResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.scene_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct GetSceneResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSceneResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSceneResponseDefaultTypeInternal() {}
  union {
    GetSceneResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSceneResponseDefaultTypeInternal _GetSceneResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR Effect::Effect(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.timestamps_)*/ {},
      /*decltype(_impl_.duration_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct EffectDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EffectDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EffectDefaultTypeInternal() {}
  union {
    Effect _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EffectDefaultTypeInternal _Effect_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR UpgradeFirmwareRequest::UpgradeFirmwareRequest(::_pbi::ConstantInitialized) {}
struct UpgradeFirmwareRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpgradeFirmwareRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpgradeFirmwareRequestDefaultTypeInternal() {}
  union {
    UpgradeFirmwareRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpgradeFirmwareRequestDefaultTypeInternal _UpgradeFirmwareRequest_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR UpgradeFirmwareResponse::UpgradeFirmwareResponse(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.current_version_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.is_latest_version_)*/ false,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct UpgradeFirmwareResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpgradeFirmwareResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpgradeFirmwareResponseDefaultTypeInternal() {}
  union {
    UpgradeFirmwareResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpgradeFirmwareResponseDefaultTypeInternal _UpgradeFirmwareResponse_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR TimeStamp::TimeStamp(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.seconds_)*/ 0u,
      /*decltype(_impl_.white_)*/ 0u,
      /*decltype(_impl_.warm_white_)*/ 0u,
      /*decltype(_impl_.red_)*/ 0u,
      /*decltype(_impl_.green_)*/ 0u,
      /*decltype(_impl_.blue_)*/ 0u,
      /*decltype(_impl_.royal_blue_)*/ 0u,
      /*decltype(_impl_.ultra_violet_)*/ 0u,
    } {}
struct TimeStampDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimeStampDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimeStampDefaultTypeInternal() {}
  union {
    TimeStamp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimeStampDefaultTypeInternal _TimeStamp_default_instance_;
static ::_pb::Metadata file_level_metadata_proto_2fmessage_2eproto[9];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_proto_2fmessage_2eproto[4];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_proto_2fmessage_2eproto = nullptr;
const ::uint32_t TableStruct_proto_2fmessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::DeviceInformationRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::DeviceInformationResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::DeviceInformationResponse, _impl_.mode_),
    PROTOBUF_FIELD_OFFSET(::DeviceInformationResponse, _impl_.current_timestamps_),
    PROTOBUF_FIELD_OFFSET(::DeviceInformationResponse, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::DeviceInformationResponse, _impl_.id_),
    PROTOBUF_FIELD_OFFSET(::DeviceInformationResponse, _impl_.version_),
    PROTOBUF_FIELD_OFFSET(::LightingScheduleRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::LightingScheduleRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::LightingScheduleRequest, _impl_.hh_),
    PROTOBUF_FIELD_OFFSET(::LightingScheduleRequest, _impl_.mm_),
    PROTOBUF_FIELD_OFFSET(::LightingScheduleRequest, _impl_.white_),
    PROTOBUF_FIELD_OFFSET(::LightingScheduleRequest, _impl_.warm_white_),
    PROTOBUF_FIELD_OFFSET(::LightingScheduleRequest, _impl_.red_),
    PROTOBUF_FIELD_OFFSET(::LightingScheduleRequest, _impl_.green_),
    PROTOBUF_FIELD_OFFSET(::LightingScheduleRequest, _impl_.blue_),
    PROTOBUF_FIELD_OFFSET(::LightingScheduleRequest, _impl_.royal_blue_),
    PROTOBUF_FIELD_OFFSET(::LightingScheduleRequest, _impl_.ultra_violet_),
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::SetSceneRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::SetSceneRequest, _impl_.scene_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::GetSceneResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::GetSceneResponse, _impl_.scene_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Effect, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::Effect, _impl_.duration_),
    PROTOBUF_FIELD_OFFSET(::Effect, _impl_.timestamps_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::UpgradeFirmwareRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::UpgradeFirmwareResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::UpgradeFirmwareResponse, _impl_.is_latest_version_),
    PROTOBUF_FIELD_OFFSET(::UpgradeFirmwareResponse, _impl_.current_version_),
    PROTOBUF_FIELD_OFFSET(::TimeStamp, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::TimeStamp, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::TimeStamp, _impl_.seconds_),
    PROTOBUF_FIELD_OFFSET(::TimeStamp, _impl_.white_),
    PROTOBUF_FIELD_OFFSET(::TimeStamp, _impl_.warm_white_),
    PROTOBUF_FIELD_OFFSET(::TimeStamp, _impl_.red_),
    PROTOBUF_FIELD_OFFSET(::TimeStamp, _impl_.green_),
    PROTOBUF_FIELD_OFFSET(::TimeStamp, _impl_.blue_),
    PROTOBUF_FIELD_OFFSET(::TimeStamp, _impl_.royal_blue_),
    PROTOBUF_FIELD_OFFSET(::TimeStamp, _impl_.ultra_violet_),
    ~0u,
    0,
    1,
    2,
    3,
    4,
    5,
    6,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::DeviceInformationRequest)},
        {8, -1, -1, sizeof(::DeviceInformationResponse)},
        {21, 38, -1, sizeof(::LightingScheduleRequest)},
        {47, -1, -1, sizeof(::SetSceneRequest)},
        {56, -1, -1, sizeof(::GetSceneResponse)},
        {65, -1, -1, sizeof(::Effect)},
        {75, -1, -1, sizeof(::UpgradeFirmwareRequest)},
        {83, -1, -1, sizeof(::UpgradeFirmwareResponse)},
        {93, 109, -1, sizeof(::TimeStamp)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_DeviceInformationRequest_default_instance_._instance,
    &::_DeviceInformationResponse_default_instance_._instance,
    &::_LightingScheduleRequest_default_instance_._instance,
    &::_SetSceneRequest_default_instance_._instance,
    &::_GetSceneResponse_default_instance_._instance,
    &::_Effect_default_instance_._instance,
    &::_UpgradeFirmwareRequest_default_instance_._instance,
    &::_UpgradeFirmwareResponse_default_instance_._instance,
    &::_TimeStamp_default_instance_._instance,
};
const char descriptor_table_protodef_proto_2fmessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\023proto/message.proto\"\032\n\030DeviceInformati"
    "onRequest\"w\n\031DeviceInformationResponse\022\023"
    "\n\004mode\030\001 \001(\0162\005.Mode\022\032\n\022current_timestamp"
    "s\030\002 \001(\r\022\014\n\004name\030\003 \001(\t\022\n\n\002id\030\004 \001(\t\022\017\n\007ver"
    "sion\030\005 \001(\t\"\267\002\n\027LightingScheduleRequest\022\017"
    "\n\002hh\030\001 \001(\rH\000\210\001\001\022\017\n\002mm\030\002 \001(\rH\001\210\001\001\022\022\n\005whit"
    "e\030\003 \001(\rH\002\210\001\001\022\027\n\nwarm_white\030\004 \001(\rH\003\210\001\001\022\020\n"
    "\003red\030\005 \001(\rH\004\210\001\001\022\022\n\005green\030\006 \001(\rH\005\210\001\001\022\021\n\004b"
    "lue\030\007 \001(\rH\006\210\001\001\022\027\n\nroyal_blue\030\010 \001(\rH\007\210\001\001\022"
    "\031\n\014ultra_violet\030\t \001(\rH\010\210\001\001B\005\n\003_hhB\005\n\003_mm"
    "B\010\n\006_whiteB\r\n\013_warm_whiteB\006\n\004_redB\010\n\006_gr"
    "eenB\007\n\005_blueB\r\n\013_royal_blueB\017\n\r_ultra_vi"
    "olet\"(\n\017SetSceneRequest\022\025\n\005scene\030\001 \001(\0162\006"
    ".Scene\")\n\020GetSceneResponse\022\025\n\005scene\030\001 \001("
    "\0162\006.Scene\":\n\006Effect\022\020\n\010duration\030\001 \001(\r\022\036\n"
    "\ntimestamps\030\002 \003(\0132\n.TimeStamp\"\030\n\026Upgrade"
    "FirmwareRequest\"M\n\027UpgradeFirmwareRespon"
    "se\022\031\n\021is_latest_version\030\001 \001(\010\022\027\n\017current"
    "_version\030\002 \001(\t\"\212\002\n\tTimeStamp\022\017\n\007seconds\030"
    "\001 \001(\r\022\022\n\005white\030\003 \001(\rH\000\210\001\001\022\027\n\nwarm_white\030"
    "\004 \001(\rH\001\210\001\001\022\020\n\003red\030\005 \001(\rH\002\210\001\001\022\022\n\005green\030\006 "
    "\001(\rH\003\210\001\001\022\021\n\004blue\030\007 \001(\rH\004\210\001\001\022\027\n\nroyal_blu"
    "e\030\010 \001(\rH\005\210\001\001\022\031\n\014ultra_violet\030\t \001(\rH\006\210\001\001B"
    "\010\n\006_whiteB\r\n\013_warm_whiteB\006\n\004_redB\010\n\006_gre"
    "enB\007\n\005_blueB\r\n\013_royal_blueB\017\n\r_ultra_vio"
    "let*\036\n\005Scene\022\025\n\021SCENE_UNSPECIFIED\020\000*\216\001\n\013"
    "CommandCode\022\034\n\030COMMAND_CODE_UNSPECIFIED\020"
    "\000\022\037\n\033COMMAND_CODE_GET_PROPERTIES\020\001\022\035\n\031CO"
    "MMAND_CODE_SET_LIGHTING\020\005\022!\n\035COMMAND_COD"
    "E_UPGRADE_FIRMWARE\020\006*@\n\004Mode\022\024\n\020MODE_UNS"
    "PECIFIED\020\000\022\017\n\013MODE_MANUAL\020\001\022\021\n\rMODE_SCHE"
    "DULE\020\002*\221\001\n\003LED\022\023\n\017LED_UNSPECIFIED\020\000\022\r\n\tL"
    "ED_WHITE\020\001\022\022\n\016LED_WARM_WHITE\020\002\022\013\n\007LED_RE"
    "D\020\003\022\r\n\tLED_GREEN\020\004\022\014\n\010LED_BLUE\020\005\022\022\n\016LED_"
    "ROYAL_BLUE\020\006\022\024\n\020LED_ULTRA_VIOLET\020\007B\027\n\025co"
    "m.tidaltech.messageb\006proto3"
};
static ::absl::once_flag descriptor_table_proto_2fmessage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_proto_2fmessage_2eproto = {
    false,
    false,
    1427,
    descriptor_table_protodef_proto_2fmessage_2eproto,
    "proto/message.proto",
    &descriptor_table_proto_2fmessage_2eproto_once,
    nullptr,
    0,
    9,
    schemas,
    file_default_instances,
    TableStruct_proto_2fmessage_2eproto::offsets,
    file_level_metadata_proto_2fmessage_2eproto,
    file_level_enum_descriptors_proto_2fmessage_2eproto,
    file_level_service_descriptors_proto_2fmessage_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_proto_2fmessage_2eproto_getter() {
  return &descriptor_table_proto_2fmessage_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_proto_2fmessage_2eproto(&descriptor_table_proto_2fmessage_2eproto);
const ::google::protobuf::EnumDescriptor* Scene_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fmessage_2eproto);
  return file_level_enum_descriptors_proto_2fmessage_2eproto[0];
}
bool Scene_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* CommandCode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fmessage_2eproto);
  return file_level_enum_descriptors_proto_2fmessage_2eproto[1];
}
bool CommandCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* Mode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fmessage_2eproto);
  return file_level_enum_descriptors_proto_2fmessage_2eproto[2];
}
bool Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}
const ::google::protobuf::EnumDescriptor* LED_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_proto_2fmessage_2eproto);
  return file_level_enum_descriptors_proto_2fmessage_2eproto[3];
}
bool LED_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class DeviceInformationRequest::_Internal {
 public:
};

DeviceInformationRequest::DeviceInformationRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:DeviceInformationRequest)
}
DeviceInformationRequest::DeviceInformationRequest(const DeviceInformationRequest& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  DeviceInformationRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:DeviceInformationRequest)
}




const ::google::protobuf::Message::ClassData DeviceInformationRequest::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*DeviceInformationRequest::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata DeviceInformationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fmessage_2eproto_getter, &descriptor_table_proto_2fmessage_2eproto_once,
      file_level_metadata_proto_2fmessage_2eproto[0]);
}
// ===================================================================

class DeviceInformationResponse::_Internal {
 public:
};

DeviceInformationResponse::DeviceInformationResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DeviceInformationResponse)
}
DeviceInformationResponse::DeviceInformationResponse(const DeviceInformationResponse& from) : ::google::protobuf::Message() {
  DeviceInformationResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      decltype(_impl_.id_){},
      decltype(_impl_.version_){},
      decltype(_impl_.mode_){},
      decltype(_impl_.current_timestamps_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.mode_, &from._impl_.mode_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.current_timestamps_) -
    reinterpret_cast<char*>(&_impl_.mode_)) + sizeof(_impl_.current_timestamps_));

  // @@protoc_insertion_point(copy_constructor:DeviceInformationResponse)
}
inline void DeviceInformationResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){},
      decltype(_impl_.id_){},
      decltype(_impl_.version_){},
      decltype(_impl_.mode_){0},
      decltype(_impl_.current_timestamps_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.id_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
DeviceInformationResponse::~DeviceInformationResponse() {
  // @@protoc_insertion_point(destructor:DeviceInformationResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceInformationResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.id_.Destroy();
  _impl_.version_.Destroy();
}
void DeviceInformationResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void DeviceInformationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceInformationResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  ::memset(&_impl_.mode_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.current_timestamps_) -
      reinterpret_cast<char*>(&_impl_.mode_)) + sizeof(_impl_.current_timestamps_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceInformationResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 47, 2> DeviceInformationResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceInformationResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .Mode mode = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceInformationResponse, _impl_.mode_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInformationResponse, _impl_.mode_)}},
    // uint32 current_timestamps = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceInformationResponse, _impl_.current_timestamps_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInformationResponse, _impl_.current_timestamps_)}},
    // string name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInformationResponse, _impl_.name_)}},
    // string id = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInformationResponse, _impl_.id_)}},
    // string version = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInformationResponse, _impl_.version_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .Mode mode = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceInformationResponse, _impl_.mode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // uint32 current_timestamps = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceInformationResponse, _impl_.current_timestamps_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string name = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceInformationResponse, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string id = 4;
    {PROTOBUF_FIELD_OFFSET(DeviceInformationResponse, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string version = 5;
    {PROTOBUF_FIELD_OFFSET(DeviceInformationResponse, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\0\0\4\2\7\0\0"
    "DeviceInformationResponse"
    "name"
    "id"
    "version"
  }},
};

::uint8_t* DeviceInformationResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeviceInformationResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .Mode mode = 1;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_mode(), target);
  }

  // uint32 current_timestamps = 2;
  if (this->_internal_current_timestamps() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_current_timestamps(), target);
  }

  // string name = 3;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DeviceInformationResponse.name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string id = 4;
  if (!this->_internal_id().empty()) {
    const std::string& _s = this->_internal_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DeviceInformationResponse.id");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string version = 5;
  if (!this->_internal_version().empty()) {
    const std::string& _s = this->_internal_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DeviceInformationResponse.version");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeviceInformationResponse)
  return target;
}

::size_t DeviceInformationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceInformationResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 3;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string id = 4;
  if (!this->_internal_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_id());
  }

  // string version = 5;
  if (!this->_internal_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_version());
  }

  // .Mode mode = 1;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
  }

  // uint32 current_timestamps = 2;
  if (this->_internal_current_timestamps() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_current_timestamps());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceInformationResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    DeviceInformationResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*DeviceInformationResponse::GetClassData() const { return &_class_data_; }


void DeviceInformationResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceInformationResponse*>(&to_msg);
  auto& from = static_cast<const DeviceInformationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DeviceInformationResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  if (from._internal_current_timestamps() != 0) {
    _this->_internal_set_current_timestamps(from._internal_current_timestamps());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceInformationResponse::CopyFrom(const DeviceInformationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceInformationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceInformationResponse::IsInitialized() const {
  return true;
}

void DeviceInformationResponse::InternalSwap(DeviceInformationResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, lhs_arena,
                                       &other->_impl_.id_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.version_, lhs_arena,
                                       &other->_impl_.version_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceInformationResponse, _impl_.current_timestamps_)
      + sizeof(DeviceInformationResponse::_impl_.current_timestamps_)
      - PROTOBUF_FIELD_OFFSET(DeviceInformationResponse, _impl_.mode_)>(
          reinterpret_cast<char*>(&_impl_.mode_),
          reinterpret_cast<char*>(&other->_impl_.mode_));
}

::google::protobuf::Metadata DeviceInformationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fmessage_2eproto_getter, &descriptor_table_proto_2fmessage_2eproto_once,
      file_level_metadata_proto_2fmessage_2eproto[1]);
}
// ===================================================================

class LightingScheduleRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<LightingScheduleRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_._has_bits_);
  static void set_has_hh(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_mm(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_white(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_warm_white(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_red(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_green(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_blue(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_royal_blue(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_ultra_violet(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

LightingScheduleRequest::LightingScheduleRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:LightingScheduleRequest)
}
LightingScheduleRequest::LightingScheduleRequest(const LightingScheduleRequest& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:LightingScheduleRequest)
}
inline void LightingScheduleRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.hh_){0u},
      decltype(_impl_.mm_){0u},
      decltype(_impl_.white_){0u},
      decltype(_impl_.warm_white_){0u},
      decltype(_impl_.red_){0u},
      decltype(_impl_.green_){0u},
      decltype(_impl_.blue_){0u},
      decltype(_impl_.royal_blue_){0u},
      decltype(_impl_.ultra_violet_){0u},
  };
}
LightingScheduleRequest::~LightingScheduleRequest() {
  // @@protoc_insertion_point(destructor:LightingScheduleRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void LightingScheduleRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void LightingScheduleRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void LightingScheduleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:LightingScheduleRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&_impl_.hh_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.royal_blue_) -
        reinterpret_cast<char*>(&_impl_.hh_)) + sizeof(_impl_.royal_blue_));
  }
  _impl_.ultra_violet_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* LightingScheduleRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 0, 2> LightingScheduleRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_LightingScheduleRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 hh = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightingScheduleRequest, _impl_.hh_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.hh_)}},
    // optional uint32 mm = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightingScheduleRequest, _impl_.mm_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.mm_)}},
    // optional uint32 white = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightingScheduleRequest, _impl_.white_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.white_)}},
    // optional uint32 warm_white = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightingScheduleRequest, _impl_.warm_white_), 3>(),
     {32, 3, 0, PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.warm_white_)}},
    // optional uint32 red = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightingScheduleRequest, _impl_.red_), 4>(),
     {40, 4, 0, PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.red_)}},
    // optional uint32 green = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightingScheduleRequest, _impl_.green_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.green_)}},
    // optional uint32 blue = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightingScheduleRequest, _impl_.blue_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.blue_)}},
    // optional uint32 royal_blue = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightingScheduleRequest, _impl_.royal_blue_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.royal_blue_)}},
    // optional uint32 ultra_violet = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LightingScheduleRequest, _impl_.ultra_violet_), 8>(),
     {72, 8, 0, PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.ultra_violet_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional uint32 hh = 1;
    {PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.hh_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 mm = 2;
    {PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.mm_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 white = 3;
    {PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.white_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 warm_white = 4;
    {PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.warm_white_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 red = 5;
    {PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.red_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 green = 6;
    {PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.green_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 blue = 7;
    {PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.blue_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 royal_blue = 8;
    {PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.royal_blue_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 ultra_violet = 9;
    {PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.ultra_violet_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* LightingScheduleRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:LightingScheduleRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 hh = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_hh(), target);
  }

  // optional uint32 mm = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_mm(), target);
  }

  // optional uint32 white = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_white(), target);
  }

  // optional uint32 warm_white = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_warm_white(), target);
  }

  // optional uint32 red = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_red(), target);
  }

  // optional uint32 green = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_green(), target);
  }

  // optional uint32 blue = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_blue(), target);
  }

  // optional uint32 royal_blue = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_royal_blue(), target);
  }

  // optional uint32 ultra_violet = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_ultra_violet(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LightingScheduleRequest)
  return target;
}

::size_t LightingScheduleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:LightingScheduleRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional uint32 hh = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_hh());
    }

    // optional uint32 mm = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_mm());
    }

    // optional uint32 white = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_white());
    }

    // optional uint32 warm_white = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_warm_white());
    }

    // optional uint32 red = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_red());
    }

    // optional uint32 green = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_green());
    }

    // optional uint32 blue = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_blue());
    }

    // optional uint32 royal_blue = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_royal_blue());
    }

  }
  // optional uint32 ultra_violet = 9;
  if (cached_has_bits & 0x00000100u) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_ultra_violet());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData LightingScheduleRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    LightingScheduleRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*LightingScheduleRequest::GetClassData() const { return &_class_data_; }


void LightingScheduleRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<LightingScheduleRequest*>(&to_msg);
  auto& from = static_cast<const LightingScheduleRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:LightingScheduleRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.hh_ = from._impl_.hh_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.mm_ = from._impl_.mm_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.white_ = from._impl_.white_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.warm_white_ = from._impl_.warm_white_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.red_ = from._impl_.red_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.green_ = from._impl_.green_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.blue_ = from._impl_.blue_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.royal_blue_ = from._impl_.royal_blue_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_internal_set_ultra_violet(from._internal_ultra_violet());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LightingScheduleRequest::CopyFrom(const LightingScheduleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:LightingScheduleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool LightingScheduleRequest::IsInitialized() const {
  return true;
}

void LightingScheduleRequest::InternalSwap(LightingScheduleRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.ultra_violet_)
      + sizeof(LightingScheduleRequest::_impl_.ultra_violet_)
      - PROTOBUF_FIELD_OFFSET(LightingScheduleRequest, _impl_.hh_)>(
          reinterpret_cast<char*>(&_impl_.hh_),
          reinterpret_cast<char*>(&other->_impl_.hh_));
}

::google::protobuf::Metadata LightingScheduleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fmessage_2eproto_getter, &descriptor_table_proto_2fmessage_2eproto_once,
      file_level_metadata_proto_2fmessage_2eproto[2]);
}
// ===================================================================

class SetSceneRequest::_Internal {
 public:
};

SetSceneRequest::SetSceneRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:SetSceneRequest)
}
SetSceneRequest::SetSceneRequest(const SetSceneRequest& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:SetSceneRequest)
}
inline void SetSceneRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.scene_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
SetSceneRequest::~SetSceneRequest() {
  // @@protoc_insertion_point(destructor:SetSceneRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SetSceneRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void SetSceneRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void SetSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:SetSceneRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.scene_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* SetSceneRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SetSceneRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_SetSceneRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Scene scene = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SetSceneRequest, _impl_.scene_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(SetSceneRequest, _impl_.scene_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Scene scene = 1;
    {PROTOBUF_FIELD_OFFSET(SetSceneRequest, _impl_.scene_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* SetSceneRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SetSceneRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .Scene scene = 1;
  if (this->_internal_scene() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_scene(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SetSceneRequest)
  return target;
}

::size_t SetSceneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SetSceneRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Scene scene = 1;
  if (this->_internal_scene() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_scene());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData SetSceneRequest::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    SetSceneRequest::MergeImpl
};
const ::google::protobuf::Message::ClassData*SetSceneRequest::GetClassData() const { return &_class_data_; }


void SetSceneRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<SetSceneRequest*>(&to_msg);
  auto& from = static_cast<const SetSceneRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:SetSceneRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_scene() != 0) {
    _this->_internal_set_scene(from._internal_scene());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SetSceneRequest::CopyFrom(const SetSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SetSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool SetSceneRequest::IsInitialized() const {
  return true;
}

void SetSceneRequest::InternalSwap(SetSceneRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.scene_, other->_impl_.scene_);
}

::google::protobuf::Metadata SetSceneRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fmessage_2eproto_getter, &descriptor_table_proto_2fmessage_2eproto_once,
      file_level_metadata_proto_2fmessage_2eproto[3]);
}
// ===================================================================

class GetSceneResponse::_Internal {
 public:
};

GetSceneResponse::GetSceneResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:GetSceneResponse)
}
GetSceneResponse::GetSceneResponse(const GetSceneResponse& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GetSceneResponse)
}
inline void GetSceneResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.scene_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
GetSceneResponse::~GetSceneResponse() {
  // @@protoc_insertion_point(destructor:GetSceneResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GetSceneResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void GetSceneResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void GetSceneResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:GetSceneResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.scene_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* GetSceneResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> GetSceneResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_GetSceneResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .Scene scene = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GetSceneResponse, _impl_.scene_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(GetSceneResponse, _impl_.scene_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .Scene scene = 1;
    {PROTOBUF_FIELD_OFFSET(GetSceneResponse, _impl_.scene_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* GetSceneResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:GetSceneResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .Scene scene = 1;
  if (this->_internal_scene() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_scene(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GetSceneResponse)
  return target;
}

::size_t GetSceneResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GetSceneResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Scene scene = 1;
  if (this->_internal_scene() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_scene());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData GetSceneResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    GetSceneResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*GetSceneResponse::GetClassData() const { return &_class_data_; }


void GetSceneResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<GetSceneResponse*>(&to_msg);
  auto& from = static_cast<const GetSceneResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:GetSceneResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_scene() != 0) {
    _this->_internal_set_scene(from._internal_scene());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GetSceneResponse::CopyFrom(const GetSceneResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GetSceneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool GetSceneResponse::IsInitialized() const {
  return true;
}

void GetSceneResponse::InternalSwap(GetSceneResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.scene_, other->_impl_.scene_);
}

::google::protobuf::Metadata GetSceneResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fmessage_2eproto_getter, &descriptor_table_proto_2fmessage_2eproto_once,
      file_level_metadata_proto_2fmessage_2eproto[4]);
}
// ===================================================================

class Effect::_Internal {
 public:
};

Effect::Effect(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Effect)
}
Effect::Effect(const Effect& from) : ::google::protobuf::Message() {
  Effect* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.timestamps_){from._impl_.timestamps_},
      decltype(_impl_.duration_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.duration_ = from._impl_.duration_;

  // @@protoc_insertion_point(copy_constructor:Effect)
}
inline void Effect::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.timestamps_){arena},
      decltype(_impl_.duration_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
Effect::~Effect() {
  // @@protoc_insertion_point(destructor:Effect)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Effect::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.timestamps_.~RepeatedPtrField();
}
void Effect::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void Effect::Clear() {
// @@protoc_insertion_point(message_clear_start:Effect)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_timestamps()->Clear();
  _impl_.duration_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Effect::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> Effect::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Effect_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .TimeStamp timestamps = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Effect, _impl_.timestamps_)}},
    // uint32 duration = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Effect, _impl_.duration_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Effect, _impl_.duration_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 duration = 1;
    {PROTOBUF_FIELD_OFFSET(Effect, _impl_.duration_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // repeated .TimeStamp timestamps = 2;
    {PROTOBUF_FIELD_OFFSET(Effect, _impl_.timestamps_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::TimeStamp>()},
  }}, {{
  }},
};

::uint8_t* Effect::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Effect)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 duration = 1;
  if (this->_internal_duration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_duration(), target);
  }

  // repeated .TimeStamp timestamps = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_timestamps_size()); i < n; i++) {
    const auto& repfield = this->_internal_timestamps().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Effect)
  return target;
}

::size_t Effect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Effect)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .TimeStamp timestamps = 2;
  total_size += 1UL * this->_internal_timestamps_size();
  for (const auto& msg : this->_internal_timestamps()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // uint32 duration = 1;
  if (this->_internal_duration() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_duration());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Effect::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    Effect::MergeImpl
};
const ::google::protobuf::Message::ClassData*Effect::GetClassData() const { return &_class_data_; }


void Effect::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Effect*>(&to_msg);
  auto& from = static_cast<const Effect&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Effect)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_timestamps()->MergeFrom(from._internal_timestamps());
  if (from._internal_duration() != 0) {
    _this->_internal_set_duration(from._internal_duration());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Effect::CopyFrom(const Effect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Effect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Effect::IsInitialized() const {
  return true;
}

void Effect::InternalSwap(Effect* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.timestamps_.InternalSwap(&other->_impl_.timestamps_);
        swap(_impl_.duration_, other->_impl_.duration_);
}

::google::protobuf::Metadata Effect::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fmessage_2eproto_getter, &descriptor_table_proto_2fmessage_2eproto_once,
      file_level_metadata_proto_2fmessage_2eproto[5]);
}
// ===================================================================

class UpgradeFirmwareRequest::_Internal {
 public:
};

UpgradeFirmwareRequest::UpgradeFirmwareRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:UpgradeFirmwareRequest)
}
UpgradeFirmwareRequest::UpgradeFirmwareRequest(const UpgradeFirmwareRequest& from) : ::google::protobuf::internal::ZeroFieldsBase() {
  UpgradeFirmwareRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:UpgradeFirmwareRequest)
}




const ::google::protobuf::Message::ClassData UpgradeFirmwareRequest::_class_data_ = {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl,
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl,
};
const ::google::protobuf::Message::ClassData*UpgradeFirmwareRequest::GetClassData() const { return &_class_data_; }







::google::protobuf::Metadata UpgradeFirmwareRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fmessage_2eproto_getter, &descriptor_table_proto_2fmessage_2eproto_once,
      file_level_metadata_proto_2fmessage_2eproto[6]);
}
// ===================================================================

class UpgradeFirmwareResponse::_Internal {
 public:
};

UpgradeFirmwareResponse::UpgradeFirmwareResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:UpgradeFirmwareResponse)
}
UpgradeFirmwareResponse::UpgradeFirmwareResponse(const UpgradeFirmwareResponse& from) : ::google::protobuf::Message() {
  UpgradeFirmwareResponse* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.current_version_){},
      decltype(_impl_.is_latest_version_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.current_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.current_version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_current_version().empty()) {
    _this->_impl_.current_version_.Set(from._internal_current_version(), _this->GetArenaForAllocation());
  }
  _this->_impl_.is_latest_version_ = from._impl_.is_latest_version_;

  // @@protoc_insertion_point(copy_constructor:UpgradeFirmwareResponse)
}
inline void UpgradeFirmwareResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.current_version_){},
      decltype(_impl_.is_latest_version_){false},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.current_version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.current_version_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
UpgradeFirmwareResponse::~UpgradeFirmwareResponse() {
  // @@protoc_insertion_point(destructor:UpgradeFirmwareResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UpgradeFirmwareResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.current_version_.Destroy();
}
void UpgradeFirmwareResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void UpgradeFirmwareResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:UpgradeFirmwareResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.current_version_.ClearToEmpty();
  _impl_.is_latest_version_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* UpgradeFirmwareResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2> UpgradeFirmwareResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_UpgradeFirmwareResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string current_version = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(UpgradeFirmwareResponse, _impl_.current_version_)}},
    // bool is_latest_version = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UpgradeFirmwareResponse, _impl_.is_latest_version_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(UpgradeFirmwareResponse, _impl_.is_latest_version_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool is_latest_version = 1;
    {PROTOBUF_FIELD_OFFSET(UpgradeFirmwareResponse, _impl_.is_latest_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string current_version = 2;
    {PROTOBUF_FIELD_OFFSET(UpgradeFirmwareResponse, _impl_.current_version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\0\17\0\0\0\0\0"
    "UpgradeFirmwareResponse"
    "current_version"
  }},
};

::uint8_t* UpgradeFirmwareResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:UpgradeFirmwareResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool is_latest_version = 1;
  if (this->_internal_is_latest_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        1, this->_internal_is_latest_version(), target);
  }

  // string current_version = 2;
  if (!this->_internal_current_version().empty()) {
    const std::string& _s = this->_internal_current_version();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "UpgradeFirmwareResponse.current_version");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:UpgradeFirmwareResponse)
  return target;
}

::size_t UpgradeFirmwareResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:UpgradeFirmwareResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string current_version = 2;
  if (!this->_internal_current_version().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_current_version());
  }

  // bool is_latest_version = 1;
  if (this->_internal_is_latest_version() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData UpgradeFirmwareResponse::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    UpgradeFirmwareResponse::MergeImpl
};
const ::google::protobuf::Message::ClassData*UpgradeFirmwareResponse::GetClassData() const { return &_class_data_; }


void UpgradeFirmwareResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<UpgradeFirmwareResponse*>(&to_msg);
  auto& from = static_cast<const UpgradeFirmwareResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:UpgradeFirmwareResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_current_version().empty()) {
    _this->_internal_set_current_version(from._internal_current_version());
  }
  if (from._internal_is_latest_version() != 0) {
    _this->_internal_set_is_latest_version(from._internal_is_latest_version());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UpgradeFirmwareResponse::CopyFrom(const UpgradeFirmwareResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:UpgradeFirmwareResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool UpgradeFirmwareResponse::IsInitialized() const {
  return true;
}

void UpgradeFirmwareResponse::InternalSwap(UpgradeFirmwareResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.current_version_, lhs_arena,
                                       &other->_impl_.current_version_, rhs_arena);
        swap(_impl_.is_latest_version_, other->_impl_.is_latest_version_);
}

::google::protobuf::Metadata UpgradeFirmwareResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fmessage_2eproto_getter, &descriptor_table_proto_2fmessage_2eproto_once,
      file_level_metadata_proto_2fmessage_2eproto[7]);
}
// ===================================================================

class TimeStamp::_Internal {
 public:
  using HasBits = decltype(std::declval<TimeStamp>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_._has_bits_);
  static void set_has_white(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_warm_white(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_red(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_green(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_blue(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_royal_blue(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_ultra_violet(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

TimeStamp::TimeStamp(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TimeStamp)
}
TimeStamp::TimeStamp(const TimeStamp& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TimeStamp)
}
inline void TimeStamp::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.seconds_){0u},
      decltype(_impl_.white_){0u},
      decltype(_impl_.warm_white_){0u},
      decltype(_impl_.red_){0u},
      decltype(_impl_.green_){0u},
      decltype(_impl_.blue_){0u},
      decltype(_impl_.royal_blue_){0u},
      decltype(_impl_.ultra_violet_){0u},
  };
}
TimeStamp::~TimeStamp() {
  // @@protoc_insertion_point(destructor:TimeStamp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TimeStamp::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void TimeStamp::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void TimeStamp::Clear() {
// @@protoc_insertion_point(message_clear_start:TimeStamp)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.seconds_ = 0u;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&_impl_.white_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.ultra_violet_) -
        reinterpret_cast<char*>(&_impl_.white_)) + sizeof(_impl_.ultra_violet_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* TimeStamp::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 8, 0, 0, 2> TimeStamp::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966786,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_TimeStamp_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 seconds = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TimeStamp, _impl_.seconds_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.seconds_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional uint32 white = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TimeStamp, _impl_.white_), 0>(),
     {24, 0, 0, PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.white_)}},
    // optional uint32 warm_white = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TimeStamp, _impl_.warm_white_), 1>(),
     {32, 1, 0, PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.warm_white_)}},
    // optional uint32 red = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TimeStamp, _impl_.red_), 2>(),
     {40, 2, 0, PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.red_)}},
    // optional uint32 green = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TimeStamp, _impl_.green_), 3>(),
     {48, 3, 0, PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.green_)}},
    // optional uint32 blue = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TimeStamp, _impl_.blue_), 4>(),
     {56, 4, 0, PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.blue_)}},
    // optional uint32 royal_blue = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TimeStamp, _impl_.royal_blue_), 5>(),
     {64, 5, 0, PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.royal_blue_)}},
    // optional uint32 ultra_violet = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TimeStamp, _impl_.ultra_violet_), 6>(),
     {72, 6, 0, PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.ultra_violet_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 seconds = 1;
    {PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.seconds_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // optional uint32 white = 3;
    {PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.white_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 warm_white = 4;
    {PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.warm_white_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 red = 5;
    {PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.red_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 green = 6;
    {PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.green_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 blue = 7;
    {PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.blue_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 royal_blue = 8;
    {PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.royal_blue_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional uint32 ultra_violet = 9;
    {PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.ultra_violet_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* TimeStamp::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:TimeStamp)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 seconds = 1;
  if (this->_internal_seconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_seconds(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional uint32 white = 3;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_white(), target);
  }

  // optional uint32 warm_white = 4;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_warm_white(), target);
  }

  // optional uint32 red = 5;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        5, this->_internal_red(), target);
  }

  // optional uint32 green = 6;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        6, this->_internal_green(), target);
  }

  // optional uint32 blue = 7;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        7, this->_internal_blue(), target);
  }

  // optional uint32 royal_blue = 8;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        8, this->_internal_royal_blue(), target);
  }

  // optional uint32 ultra_violet = 9;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        9, this->_internal_ultra_violet(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TimeStamp)
  return target;
}

::size_t TimeStamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TimeStamp)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 seconds = 1;
  if (this->_internal_seconds() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_seconds());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional uint32 white = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_white());
    }

    // optional uint32 warm_white = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_warm_white());
    }

    // optional uint32 red = 5;
    if (cached_has_bits & 0x00000004u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_red());
    }

    // optional uint32 green = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_green());
    }

    // optional uint32 blue = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_blue());
    }

    // optional uint32 royal_blue = 8;
    if (cached_has_bits & 0x00000020u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_royal_blue());
    }

    // optional uint32 ultra_violet = 9;
    if (cached_has_bits & 0x00000040u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
          this->_internal_ultra_violet());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData TimeStamp::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    TimeStamp::MergeImpl
};
const ::google::protobuf::Message::ClassData*TimeStamp::GetClassData() const { return &_class_data_; }


void TimeStamp::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<TimeStamp*>(&to_msg);
  auto& from = static_cast<const TimeStamp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TimeStamp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_seconds() != 0) {
    _this->_internal_set_seconds(from._internal_seconds());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_impl_.white_ = from._impl_.white_;
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_impl_.warm_white_ = from._impl_.warm_white_;
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_impl_.red_ = from._impl_.red_;
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.green_ = from._impl_.green_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.blue_ = from._impl_.blue_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.royal_blue_ = from._impl_.royal_blue_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.ultra_violet_ = from._impl_.ultra_violet_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TimeStamp::CopyFrom(const TimeStamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TimeStamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool TimeStamp::IsInitialized() const {
  return true;
}

void TimeStamp::InternalSwap(TimeStamp* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.ultra_violet_)
      + sizeof(TimeStamp::_impl_.ultra_violet_)
      - PROTOBUF_FIELD_OFFSET(TimeStamp, _impl_.seconds_)>(
          reinterpret_cast<char*>(&_impl_.seconds_),
          reinterpret_cast<char*>(&other->_impl_.seconds_));
}

::google::protobuf::Metadata TimeStamp::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_proto_2fmessage_2eproto_getter, &descriptor_table_proto_2fmessage_2eproto_once,
      file_level_metadata_proto_2fmessage_2eproto[8]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
