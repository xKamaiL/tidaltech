/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: proto/message.proto */

#ifndef PROTOBUF_C_proto_2fmessage_2eproto__INCLUDED
#define PROTOBUF_C_proto_2fmessage_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct CommandResult CommandResult;
typedef struct Lighting Lighting;
typedef struct TimePoints TimePoints;
typedef struct Effect Effect;
typedef struct TimePoint TimePoint;
typedef struct Brightness Brightness;
typedef struct TimeStamp TimeStamp;


/* --- enums --- */

typedef enum _CommandCode {
  COMMAND_CODE__COMMAND_CODE_UNSPECIFIED = 0,
  COMMAND_CODE__COMMAND_GET_PROPERTIES = 1,
  /*
   * prepend
   */
  COMMAND_CODE__COMMAND_SET_LIGHTING = 5,
  COMMAND_CODE__COMMAND_UPGRADE_FIRMWARE = 6
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(COMMAND_CODE)
} CommandCode;
/*
 * Mode specifies the mode of the lighting
 */
typedef enum _Mode {
  MODE__MODE_UNSPECIFIED = 0,
  /*
   * Manual mode
   * show static lighting
   */
  MODE__MODE_MANUAL = 1,
  /*
   * Schedule mode
   * show lighting based on schedule time configured
   */
  MODE__MODE_SCHEDULE = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(MODE)
} Mode;
/*
 * LED specifies the LED
 */
typedef enum _LED {
  LED__LED_UNSPECIFIED = 0,
  LED__LED_WHITE = 1,
  LED__LED_WARM_WHITE = 2,
  LED__LED_RED = 3,
  LED__LED_GREEN = 4,
  LED__LED_BLUE = 5,
  LED__LED_ROYAL_BLUE = 6,
  LED__LED_ULTRA_VIOLET = 7
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LED)
} LED;

/* --- messages --- */

struct  CommandResult
{
  ProtobufCMessage base;
  protobuf_c_boolean ok;
  char *error_code;
  char *error_message;
};
#define COMMAND_RESULT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&command_result__descriptor) \
, 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


typedef enum {
  LIGHTING__DATA__NOT_SET = 0,
  LIGHTING__DATA_SCHEDULE = 2,
  LIGHTING__DATA_EFFECT = 3,
  LIGHTING__DATA_RGB = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(LIGHTING__DATA__CASE)
} Lighting__DataCase;

/*
 * Lighting is the data that will be sent
 * to the device
 */
struct  Lighting
{
  ProtobufCMessage base;
  /*
   * Mode specifies the mode of the lighting
   */
  Mode mode;
  Lighting__DataCase data_case;
  union {
    /*
     * Schedule mode
     */
    TimePoints *schedule;
    /*
     * Effect mode
     */
    Effect *effect;
    /*
     * Manual mode
     */
    uint32_t rgb;
  };
};
#define LIGHTING__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&lighting__descriptor) \
, MODE__MODE_UNSPECIFIED, LIGHTING__DATA__NOT_SET, {0} }


/*
 * TimePoints store a list of TimePoint
 */
struct  TimePoints
{
  ProtobufCMessage base;
  size_t n_points;
  TimePoint **points;
};
#define TIME_POINTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&time_points__descriptor) \
, 0,NULL }


/*
 * Effect store a list of TimeStamp
 * and how long the effect should last
 */
struct  Effect
{
  ProtobufCMessage base;
  uint32_t duration;
  size_t n_timestamps;
  TimeStamp **timestamps;
};
#define EFFECT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&effect__descriptor) \
, 0, 0,NULL }


/*
 * TimePoint store hh:mm
 * store minutes vs hh:mm
 */
struct  TimePoint
{
  ProtobufCMessage base;
  /*
   * 5 bit
   */
  uint32_t hh;
  /*
   * 6 bit
   */
  uint32_t mm;
  Brightness *brightness;
};
#define TIME_POINT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&time_point__descriptor) \
, 0, 0, NULL }


/*
 * Brightness store 0-100 %
 * of each LED
 */
struct  Brightness
{
  ProtobufCMessage base;
  uint32_t white;
  uint32_t warm_white;
  uint32_t red;
  uint32_t green;
  uint32_t blue;
  uint32_t royal_blue;
  uint32_t ultra_violet;
};
#define BRIGHTNESS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&brightness__descriptor) \
, 0, 0, 0, 0, 0, 0, 0 }


struct  TimeStamp
{
  ProtobufCMessage base;
  uint32_t seconds;
  Brightness *brightness;
};
#define TIME_STAMP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&time_stamp__descriptor) \
, 0, NULL }


/* CommandResult methods */
void   command_result__init
                     (CommandResult         *message);
size_t command_result__get_packed_size
                     (const CommandResult   *message);
size_t command_result__pack
                     (const CommandResult   *message,
                      uint8_t             *out);
size_t command_result__pack_to_buffer
                     (const CommandResult   *message,
                      ProtobufCBuffer     *buffer);
CommandResult *
       command_result__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   command_result__free_unpacked
                     (CommandResult *message,
                      ProtobufCAllocator *allocator);
/* Lighting methods */
void   lighting__init
                     (Lighting         *message);
size_t lighting__get_packed_size
                     (const Lighting   *message);
size_t lighting__pack
                     (const Lighting   *message,
                      uint8_t             *out);
size_t lighting__pack_to_buffer
                     (const Lighting   *message,
                      ProtobufCBuffer     *buffer);
Lighting *
       lighting__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   lighting__free_unpacked
                     (Lighting *message,
                      ProtobufCAllocator *allocator);
/* TimePoints methods */
void   time_points__init
                     (TimePoints         *message);
size_t time_points__get_packed_size
                     (const TimePoints   *message);
size_t time_points__pack
                     (const TimePoints   *message,
                      uint8_t             *out);
size_t time_points__pack_to_buffer
                     (const TimePoints   *message,
                      ProtobufCBuffer     *buffer);
TimePoints *
       time_points__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   time_points__free_unpacked
                     (TimePoints *message,
                      ProtobufCAllocator *allocator);
/* Effect methods */
void   effect__init
                     (Effect         *message);
size_t effect__get_packed_size
                     (const Effect   *message);
size_t effect__pack
                     (const Effect   *message,
                      uint8_t             *out);
size_t effect__pack_to_buffer
                     (const Effect   *message,
                      ProtobufCBuffer     *buffer);
Effect *
       effect__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   effect__free_unpacked
                     (Effect *message,
                      ProtobufCAllocator *allocator);
/* TimePoint methods */
void   time_point__init
                     (TimePoint         *message);
size_t time_point__get_packed_size
                     (const TimePoint   *message);
size_t time_point__pack
                     (const TimePoint   *message,
                      uint8_t             *out);
size_t time_point__pack_to_buffer
                     (const TimePoint   *message,
                      ProtobufCBuffer     *buffer);
TimePoint *
       time_point__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   time_point__free_unpacked
                     (TimePoint *message,
                      ProtobufCAllocator *allocator);
/* Brightness methods */
void   brightness__init
                     (Brightness         *message);
size_t brightness__get_packed_size
                     (const Brightness   *message);
size_t brightness__pack
                     (const Brightness   *message,
                      uint8_t             *out);
size_t brightness__pack_to_buffer
                     (const Brightness   *message,
                      ProtobufCBuffer     *buffer);
Brightness *
       brightness__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   brightness__free_unpacked
                     (Brightness *message,
                      ProtobufCAllocator *allocator);
/* TimeStamp methods */
void   time_stamp__init
                     (TimeStamp         *message);
size_t time_stamp__get_packed_size
                     (const TimeStamp   *message);
size_t time_stamp__pack
                     (const TimeStamp   *message,
                      uint8_t             *out);
size_t time_stamp__pack_to_buffer
                     (const TimeStamp   *message,
                      ProtobufCBuffer     *buffer);
TimeStamp *
       time_stamp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   time_stamp__free_unpacked
                     (TimeStamp *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CommandResult_Closure)
                 (const CommandResult *message,
                  void *closure_data);
typedef void (*Lighting_Closure)
                 (const Lighting *message,
                  void *closure_data);
typedef void (*TimePoints_Closure)
                 (const TimePoints *message,
                  void *closure_data);
typedef void (*Effect_Closure)
                 (const Effect *message,
                  void *closure_data);
typedef void (*TimePoint_Closure)
                 (const TimePoint *message,
                  void *closure_data);
typedef void (*Brightness_Closure)
                 (const Brightness *message,
                  void *closure_data);
typedef void (*TimeStamp_Closure)
                 (const TimeStamp *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    command_code__descriptor;
extern const ProtobufCEnumDescriptor    mode__descriptor;
extern const ProtobufCEnumDescriptor    led__descriptor;
extern const ProtobufCMessageDescriptor command_result__descriptor;
extern const ProtobufCMessageDescriptor lighting__descriptor;
extern const ProtobufCMessageDescriptor time_points__descriptor;
extern const ProtobufCMessageDescriptor effect__descriptor;
extern const ProtobufCMessageDescriptor time_point__descriptor;
extern const ProtobufCMessageDescriptor brightness__descriptor;
extern const ProtobufCMessageDescriptor time_stamp__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_proto_2fmessage_2eproto__INCLUDED */
